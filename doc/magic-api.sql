/*
 Navicat Premium Data Transfer

 Source Server         : claudia
 Source Server Type    : MySQL
 Source Server Version : 80022
 Source Host           : localhost:3306
 Source Schema         : magic-api

 Target Server Type    : MySQL
 Target Server Version : 80022
 File Encoding         : 65001

 Date: 02/02/2021 10:47:23
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for magic_api_info
-- ----------------------------
DROP TABLE IF EXISTS `magic_api_info`;
CREATE TABLE `magic_api_info`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `api_method` varchar(12) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求方法',
  `api_path` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求路径',
  `api_script` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '接口脚本',
  `api_parameter` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '接口参数',
  `api_option` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '接口选项',
  `api_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '接口名称',
  `api_group_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '分组ID',
  `api_request_body` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '请求体',
  `api_request_header` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '请求Header',
  `api_response_body` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '输出结果',
  `api_response_header` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '输出Header',
  `api_description` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '接口描述',
  `api_create_time` bigint NULL DEFAULT NULL COMMENT '创建时间',
  `api_update_time` bigint NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = 'MagicAPI接口信息' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of magic_api_info
-- ----------------------------
INSERT INTO `magic_api_info` VALUES ('0af0ddb51ec94af088a728d38343a37c', 'GET', 'cache', '// return db.cache(\'test\').select(\'select api_name, api_method, api_path from magic_api_info\');\r\nreturn db.cache(\'test\');', '[]', '[]', 'cache', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"api_name\": \"cache\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"cache\"\n        },\n        {\n            \"api_name\": \"使用Linq过滤\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"filter\"\n        },\n        {\n            \"api_name\": \"调用其他接口\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"call\"\n        },\n        {\n            \"api_name\": \"日期格式化\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"format\"\n        },\n        {\n            \"api_name\": \"分页测试\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"page1\"\n        },\n        {\n            \"api_name\": \"手动关联\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"join\"\n        },\n        {\n            \"api_name\": \"使用Linq分组\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/group\"\n        },\n        {\n            \"api_name\": \"测试日志\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"log\"\n        },\n        {\n            \"api_name\": \"字段转换\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"map\"\n        },\n        {\n            \"api_name\": \"空值转换\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"null\"\n        },\n        {\n            \"api_name\": \"使用Linq转Tree\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"tree\"\n        },\n        {\n            \"api_name\": \"读取配置\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"config\"\n        },\n        {\n            \"api_name\": \"参数测试\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"expression\"\n        },\n        {\n            \"api_name\": \"动态行转列\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/pivot\"\n        },\n        {\n            \"api_name\": \"list转tree\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/tree\"\n        },\n        {\n            \"api_name\": \"根据零件代码获取唯一零件\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"get_component_by_code\"\n        },\n        {\n            \"api_name\": \"查询特定材料类型代码列表\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"get_stuff_code_list_by_type\"\n        },\n        {\n            \"api_name\": \"参数验证\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"assert\"\n        },\n        {\n            \"api_name\": \"使用Linq动态行转列\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"pivot\"\n        },\n        {\n            \"api_name\": \"List过滤\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/filter\"\n        },\n        {\n            \"api_name\": \"使用Linq关联\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"join\"\n        },\n        {\n            \"api_name\": \"自定义函数调用\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"custom\"\n        },\n        {\n            \"api_name\": \"过滤和转换\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/filter-map\"\n        },\n        {\n            \"api_name\": \"调用函数\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"func\"\n        },\n        {\n            \"api_name\": \"简单分组\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/group\"\n        },\n        {\n            \"api_name\": \"异步执行\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"async\"\n        },\n        {\n            \"api_name\": \"调用函数列表\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"invoke_func\"\n        }\n    ],\n    \"timestamp\": 1612146453140\n}', NULL, '', 1612146453108, 1612146487510);
INSERT INTO `magic_api_info` VALUES ('1c4dab17be8641a19cfd37ebbe8bddda', 'GET', 'filter', 'var list = [{\r\n    sex : 0,\r\n    name : \'小明\'\r\n},{\r\n    sex : 1,\r\n    name : \'小花\'\r\n}]\r\nreturn select * from list t where t.sex = 0', '[]', '[]', '使用Linq过滤', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"sex\": 0,\n            \"name\": \"小明\"\n        }\n    ],\n    \"timestamp\": 1611916610305\n}', NULL, '', 1611916610265, 1611916614375);
INSERT INTO `magic_api_info` VALUES ('210b3b49036d4348894a70e6fb29cb97', 'GET', 'call', 'import \'@get:/other/assert\' as test;\r\nvar id = \'1\';\r\nvar message = \'hello\'\r\nreturn test();', '[]', '[]', '调用其他接口', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1611912681279\n}', NULL, '', 1611912221964, 1611914312248);
INSERT INTO `magic_api_info` VALUES ('24004f976c6f48d4af65dfd2f416df6f', 'GET', 'format', 'var val = new Date();\r\nreturn {\'使用.format\': val.format(\'yyyy-MM-dd\'),\r\n        \'使用date_format\' : date_format(val)\r\n        }', '[]', '[]', '日期格式化', '4591af9bd7ff447398f3417554cfff15', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": {\n        \"使用.format\": \"2021-01-29\",\n        \"使用date_format\": \"2021-01-29 15:13:50\"\n    },\n    \"timestamp\": 1611904430039\n}', NULL, '', 1611904429996, 1611904436774);
INSERT INTO `magic_api_info` VALUES ('26f74c844c624156945ea9c8498b3cba', 'GET', 'map', 'var map = {key1 : 1, key2 : 2, key3 : 3};\r\nvar sum = 0;\r\nvar keys = \'\';\r\nfor(key, value in map){\r\n    sum = sum + value;\r\n    keys = keys + key;\r\n}\r\nreturn keys + \'-\' + sum;', '[]', '[]', '循环Map', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"key1key2key3-6\",\n    \"timestamp\": 1612158116511\n}', NULL, '', 1612158116483, 1612158117106);
INSERT INTO `magic_api_info` VALUES ('2754a09c2da449469f2c092110374fd6', 'GET', 'page1', 'return db.page(\'select api_name from magic_api_info\');', '[]', '[]', '分页测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '', NULL, '', 1612146096468, 1612146096468);
INSERT INTO `magic_api_info` VALUES ('2c350ca1357742b7b7bbef1cfb4ca295', 'GET', 'while', 'var index = 0;\r\nvar sum = 0;\r\nwhile(index < 100){\r\n    sum += index++;\r\n}\r\nreturn sum;', '[]', '[]', 'while', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612170474445, 1612170474445);
INSERT INTO `magic_api_info` VALUES ('2d15ce85da1d425db0be16a429233cc7', 'GET', 'join', 'return db.camel().select(\'select api_name, api_group_id from magic_api_info\')\r\n         .join(db.camel().select(\'select id, group_name from magic_group\'), (t1, t2) => t1.apiGroupId == t2.id)\r\n         .map(it => {name : it.apiName, groupId : it.apiGroupId, groupName : it.groupName})', '[]', '[]', '手动关联', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611908207382, 1611908209015);
INSERT INTO `magic_api_info` VALUES ('3713bc1be3174e80b9ec91441c5d57f7', 'GET', '/group', 'return select t.api_group_id, count(t.api_group_id) count\r\n       from db.select(\'select api_group_id from magic_api_info\') t\r\n       group by t.api_group_id\r\n       order by count(t.api_group_id) desc', '[]', '[]', '使用Linq分组', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"api_group_id\": \"4591af9bd7ff447398f3417554cfff15\",\n            \"count\": 8\n        },\n        {\n            \"api_group_id\": \"88b03ba01ba348bbb1d40203fed80fbb\",\n            \"count\": 5\n        },\n        {\n            \"api_group_id\": \"cf0d1a9ad00d45299b27830831db9a5a\",\n            \"count\": 4\n        },\n        {\n            \"api_group_id\": \"3a7413109fda430da4f5e76dddaa5c6f\",\n            \"count\": 1\n        }\n    ],\n    \"timestamp\": 1611916132149\n}', NULL, '', 1611916132108, 1611916155224);
INSERT INTO `magic_api_info` VALUES ('3c283419514540e5a2c4e7c45c9e84f1', 'GET', 'log', 'import log;\r\nlog.info(\"info 日志：{}\",message);\r\nlog.warn(\'warn 日志\');\r\ntry{\r\n    return 1 / 0;\r\n}catch(e){\r\n    log.error(\'error日志\',e);\r\n}\r\nreturn \'OK\';', '[{\"name\":\"message\",\"value\":\"Hello\",\"description\":\"\"}]', '[]', '测试日志', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1612144136308, 1612144136308);
INSERT INTO `magic_api_info` VALUES ('3d1aa6178a6c44bd9cdad630b213d072', 'GET', 'map', 'var list = [{\r\n    sex : 0,\r\n    name : \'小明\',\r\n    age : 19\r\n},{\r\n    sex : 1,\r\n    name : \'小花\',\r\n    age : 18\r\n}];\r\n\r\nvar getAge = (age)=>{return age > 18? \'成人\' : \'未成年\'}\r\nreturn list.map((item)=>{age : getAge(item.age), sex : item.sex == 0? \'男\' : \'女\', name : item.name});', '[]', '[]', '字段转换', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611908860435, 1611908860435);
INSERT INTO `magic_api_info` VALUES ('4b7509246b8948cea088d33448c2fb74', 'GET', 'null', 'var list = [{name : null, age : 18}, {name : \'小明\'}]\r\nreturn select t.name || \'无名\' name, ifnull(t.age, 20) age from list t', '[]', '[]', '空值转换', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"找不到方法 ifnull(Integer,Integer,Integer)\",\n    \"data\": null,\n    \"timestamp\": 1611914535108\n}', NULL, '', 1611914535078, 1611914571787);
INSERT INTO `magic_api_info` VALUES ('4cc1cfdd704c484db15015ced896aeb4', 'GET', 'tree', 'var toTree = (list, parentId) => select t.*, toTree(list, t.id) children from list t where t.parent_id = parentId\r\n\r\nreturn toTree(db.select(\'select id, group_name, parent_id from magic_group\'), \'0\')', '[]', '[]', '使用Linq转Tree', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"3a7413109fda430da4f5e76dddaa5c6f\",\n            \"group_name\": \"demo3其他测试\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"4591af9bd7ff447398f3417554cfff15\",\n            \"group_name\": \"demo1结果转换\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"6671dfa08b674e7194e4df1aeb3fe57d\",\n            \"group_name\": \"测试函数\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"82e1a4c8a19b4f30a1c24892434e8e87\",\n            \"group_name\": \"函数测试\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"88b03ba01ba348bbb1d40203fed80fbb\",\n            \"group_name\": \"demo2Linq转换\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"cf0d1a9ad00d45299b27830831db9a5a\",\n            \"group_name\": \"材料\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        }\n    ],\n    \"timestamp\": 1611916866238\n}', NULL, '', 1611916790361, 1611916878455);
INSERT INTO `magic_api_info` VALUES ('5e52b28f5dbb4e7f8888a04c01d9da6d', 'GET', 'lambda/list', 'var list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nvar sum = 0;\r\nlist.each(it => sum += it + 1)\r\nreturn sum', '[]', '[]', 'lambda循环list', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 65,\n    \"timestamp\": 1612158740844\n}', NULL, '', 1612158709693, 1612159010329);
INSERT INTO `magic_api_info` VALUES ('5e7269d17e0b4f50b41223b81079ba8f', 'GET', 'var', 'var int = 1;\r\nvar double = 2.0d;\r\nvar long = 3L;\r\nvar float = 4f;\r\nvar byte = 5b;\r\nvar short = 6s;\r\nvar boolean = true;\r\nvar nullValue = null;\r\nvar list = [1, 2, 3, 4, 5];\r\nvar map = {k1:123, k2:\"456\", k3:789L, k4:{k5:\'...\'}};\r\nvar string1 = \"str\";\r\nvar string2 = \"str2\";\r\nvar string3 = \"\"\" select * from table t1 join table2 t1 join table2 t2 on t2.xxx = t1.xxx where t1.id in (1,2,3,4,5,6)\"\"\"\r\nvar lambda = e => e + 1;', '[]', '[]', '定义变量', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612152177344, 1612152177344);
INSERT INTO `magic_api_info` VALUES ('6e3fec4be12f4fb1abfa3eef437441ca', 'GET', 'lambda', '/*\r\n    测试Lambda\r\n*/\r\nvar lambda1 = e => e + 1; //单参数单行代码，省略括号,省略{}\r\nvar lambda2 = (e) => e +1; //单参数单行代码，不省略括号，省略{} 作用同上\r\nvar lambda4 = e => {e + 1};//单参数无返回值，不能省略{}\r\nvar lambda5 = e => {return e + 1};//单参数有返回值，省略括号,不省略{}\r\nvar lambda6 = (e) => {return e + 1};//单参数有返回值，不省略括号,不省略{}，作用同上\r\nvar lambda7 = (a,b) => a + b; //多参数单行代码，省略{}\r\nvar lambda7 = (a,b) => {return a + b}; //多参数单行代码，有返回值，作用同上\r\nvar lambda8 = (a,b) =>{ //多参数多行代码， 无法省略括号和{}\r\n    a = a + 1;\r\n    return a + b;\r\n}\r\nvar v1 = lambda1(1);    //返回2\r\nvar v2 = lambda2(v1);    //返回3\r\nreturn lambda8(v1,lambda7(v1,v2)); //返回8\r\n', '[]', '[]', '定义lambda', '079c220a28314594b12cd9e2e5426c73', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 8,\n    \"timestamp\": 1612156726072\n}', NULL, '', 1612156726040, 1612156794057);
INSERT INTO `magic_api_info` VALUES ('6fff481f17e541fda75ddce30b20322f', 'GET', 'column', 'var sql = \"\"\"select api_name from magic_api_info limit 1\"\"\";\r\nreturn {\'default\':db.selectOne(sql), \r\n        \'camel\':db.camel().selectOne(sql),\r\n        \'pascel\':db.pascal().selectOne(sql),\r\n        \'upper\':db.upper().selectOne(sql),\r\n        \'lower\':db.lower().selectOne(sql),\r\n        \'custom\':db.columnCase(\'camel\').selectOne(sql) }', '[]', '[]', '列名转换', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"在\'org.ssssssss.magicapi.modules.SQLModule\'中找不到方法 name()\",\n    \"data\": null,\n    \"timestamp\": 1612149219878\n}', NULL, '', 1612149219846, 1612149231941);
INSERT INTO `magic_api_info` VALUES ('863c2fe75be5410cb93ae9e9d6afe2b3', 'GET', 'config', 'import env;\r\nreturn env.get(\'magic-api.web\')', '[]', '[]', '读取配置', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1612144269525, 1612144269525);
INSERT INTO `magic_api_info` VALUES ('87b8e49694e544b3bbf09bf7823537e2', 'GET', 'lambda/map', 'var map = {\r\n    key1 : 1,\r\n    key2 : 2,\r\n    key3 : 3\r\n};\r\nvar sum = 0;\r\nvar keys = \'\';\r\nmap.each((key, value) => {\r\n    keys += key;\r\n    sum += value;\r\n})\r\n\r\nreturn keys + \'-\' + sum; ', '[]', '[]', 'lambda循环map', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"key1key2key3-6\",\n    \"timestamp\": 1612159170711\n}', NULL, '', 1612159145540, 1612159189333);
INSERT INTO `magic_api_info` VALUES ('886405f33b7a4dbba32cce2fba453735', 'GET', 'list', 'var list = [1, 2, 3, 4, 5];\r\nvar sum = 0;\r\nfor(val in list){\r\n    sum = sum + val;\r\n}\r\nreturn sum;', '[]', '[]', '循环List', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612157852522, 1612157852522);
INSERT INTO `magic_api_info` VALUES ('8dcf49540f194c0e91f09f738d49696a', 'GET', 'optional', 'var map = {\r\n    a : {b:\'ok\'},\r\n    c : 1\r\n}\r\nreturn map.a.bbbb?.c + \'-\' + map.a?.b;', '[]', '[]', '可选链', 'ae60cd38a8b24608bbad75d26c9ed09c', '', '[]', '', NULL, '', 1612157401931, 1612157402300);
INSERT INTO `magic_api_info` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1c4dab17be8641a19cfd37ebbe8bddda\', \r\n           \'210b3b49036d4348894a70e6fb29cb97\', \r\n           \'24004f976c6f48d4af65dfd2f416df6f\'];\r\n// return db.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'1c4dab17be8641a19cfd37ebbe8bddda\';\r\n// return db.select(\"select * from magic_api_info where id = \'${id}\'\")\r\nreturn db.select(\"select * from magic_api_info where id = \'210b3b49036d4348894a70e6fb29cb97\' ?{name, and api_name = #{name}}\")', '[{\"name\":\"name\",\"value\":\"调用其他接口\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [],\n    \"timestamp\": 1612145639505\n}', NULL, '', 1612145215453, 1612145686794);
INSERT INTO `magic_api_info` VALUES ('a49afaac0d044cd0ae88a6ee43e13b4c', 'GET', '/pivot', 'var result = db.select(\'select api_method,api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id,group_name from magic_group\');\r\nvar pivot = (list)=>list.group(it=> it.api_method,values=> values.size())\r\nvar start = System.currentTimeMillis();\r\nvar value =\r\n    select * from (\r\n        select \r\n            mg.group_name\r\n        from result ma \r\n        join groups mg on mg.id = ma.api_group_id\r\n        group by ma.api_group_id\r\n        having count(ma.api_method) > 5\r\n    ) t order by t.POST desc\r\n// 期待结果如下\r\n/*\r\n  -     GET    POST \r\n分组1    X       X\r\n分组2    X       X\r\n分组3    X       X\r\n分组4    X       X\r\n其中X为该分组对应请求方法的数量\r\n*/\r\nvar time = System.currentTimeMillis() - start;\r\nexit 200,\'耗时：\' + time,value', '[]', '[]', '动态行转列', '4591af9bd7ff447398f3417554cfff15', '', '[]', '{\n    \"code\": 200,\n    \"message\": \"耗时：2\",\n    \"data\": [],\n    \"timestamp\": 1611901134866\n}', NULL, '', 1611901104539, 1611901214312);
INSERT INTO `magic_api_info` VALUES ('a733f552a79a445d8226cd1bfa399e27', 'GET', 'image', 'import \'java.awt.image.BufferedImage\' as BufferedImage;\r\nimport \'java.awt.Color\' as Color;\r\nimport \'java.awt.Font\' as Font;\r\nimport \'java.io.ByteArrayOutputStream\' as ByteArrayOutputStream;\r\nimport \'java.util.Random\' as Random;\r\nimport \'javax.imageio.ImageIO\' as ImageIO;\r\nimport response;\r\nimport log;\r\n\r\nvar width = 200;\r\nvar height = 69;\r\nvar image = new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);\r\nvar graphics = image.getGraphics();\r\ngraphics.setColor(Color.WHITE);\r\ngraphics.fillRect(0,0,width,height);\r\ngraphics.setFont(new Font(\"微软雅黑\", Font.BOLD, 40));\r\nvar letter = \'123456789abcdefghijklmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\';\r\nvar random = new Random();\r\nvar randomColor = ()=>new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));\r\nvar x = 10;\r\nvar code = \'\';\r\nfor (i in range(0, 3)){ //验证码\r\n    graphics.setColor(randomColor());\r\n    var degree = random.nextInt() % 30;\r\n    var ch = letter.charAt(random.nextInt(letter.length()));\r\n    code = code + ch;\r\n    graphics.rotate(degree * 3.1415926535 / 180, x, 45);\r\n    graphics.drawString(ch + \'\', x, 45);\r\n    graphics.rotate(-degree * 3.1415926535 / 180, x, 45);\r\n    x = x + 48;\r\n}\r\nlog.info(\'生成的验证码:{}\',code)\r\nfor (i in range(0, 6)) {    //干扰线\r\n    graphics.setColor(randomColor());\r\n    graphics.drawLine(random.nextInt(width), random.nextInt(height),random.nextInt(width), random.nextInt(height));\r\n}\r\n\r\nfor(i in range(0, 30)){  //噪点\r\n    graphics.setColor(randomColor());\r\n    graphics.fillRect(random.nextInt(width), random.nextInt(height), 2,2);\r\n\r\n}\r\ngraphics.dispose();\r\nvar baos = new ByteArrayOutputStream();\r\nImageIO.write(image,\"png\",baos);\r\nbaos.flush();\r\nbaos.close();\r\nreturn response.image(baos.toByteArray(),\'image/png\');\r\n', '[]', '[]', '生成验证码', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', 'iVBORw0KGgoAAAANSUhEUgAAAMgAAABFCAIAAACAFD7PAAAElUlEQVR42u3bv2sVQRAH8AMrQS0k9lEhiBYWxiZgqWUaExT/A0MKI+EpIphCEIIPsRFSqWCRRpQUSSOxSBBBi4AgFuIPELURLIJoEZ4DB+t5d7tvf8zuzu7N8K3k5QXCx5nZffeKAReXhyr4T8DFsLgYFlfKtf3kF4RhcREixbBo1eszlyBxPaGQYlgMC98TRVh3nj6HsDDiI6/3YxliCau4Og1hWLl6cmlR6cHiSmIr5x2Ly+8WlRisb3PHIQwiuRbFsLhF8SjkSs0Tw+KRx7ASrJmRLxCCLWp9dL8sDCsBUl5hWbcohaquwHo8eyJpUj5sOW5RalUd6lgutk6Ob4iY/uyN3T1StlC28qGqkoH1e/MWxN2WHa8qLAtk1rZwYSFu5ZnAKlWJhG9dMliavKI3LdyDng6jJGG58zKypValyYtI0/IB60pvApLkdQOuKtOxqAlLbUsGS8cKNVuZwEJvV+4bPYotIyjRYVVHnu91SgVr8ucjCNl2hXJadBmIpk3Id9P6vPQWQmpbx4F16s8zSBRY6KdFzaZlCoU+LK/CLEehDJbpHHy1fhYSdywm2rTc7xeMYH3a2YJE27FM25ULLKybCP3jYSxb17/3IQzL7xx8v/AAYm3L5VorIVhGyKifCr2eB2Ww3G8idH5QZmtqZhZC/OpBADq2thT6VJhKuxo6FhVWUD7kaYWysbYKaRXGsNJoV0Nt6d+Omn5ErbBVwnq5uAOp9bBWWDJb8ytTkAxU5QZLjEVcVV9nDkGGblolrPI1JS+IDqzSEzqpbGGFVyXE6NjSf9sSlsUWL5awVmFePdVgCVWJwSLSrqpuFLZcfoW+rdq/C15hPGULaxC1hK0qL5R3VsNSDL4Sk2hgITf3qiqGhckLq11Z2JL1J5mwe3cPQBiWrzm4dW0fBIsXri0dWMLT0MuFmjB0WDVVacNyf09EWE1b/ppW1ZPplZWnKUkdlowLkbXddOXCtdX05HIRiissAVhNMdFVaRJpnhZRYFX3Jx936+7CmqpowWrSaSUVGJb+aKtdNzh+aVF4cvnORRhhsdqVJSwjVfObFyG+b63UvJpXWRaPCrae74LZshAWsV1lBUvGS/EyHVvq+8zAsIyEUYflospT7SouQ0w/b27FJ7Olfz9ubevh6m0IirBWVYNIX6NA7lgh/78iwhr8/ziXxectcWHJGlgasNS8KFwlOD4nA5LAlvXndzVbL6aXIc2XnT46BqG55seEFbEW+osQd16tw054cjktVm1FhCXaVXRhBX1PalL6vKyHndeBSPaqIk9YRp6sLws6YiuKsIKgJ0RSIR9+Ig4rsLB/sDb3zEHOT9yHsKe8bQUQFhkWBU8j/ZuQbtryJwxnFB7Z/giJ1aIc+xPDqglLDxYpTzwQvTawQMt7FzxlAwtFmEdYY+MfIFik6HvK0pa1MC+wSkwlrE55yr70hRU+SOXdn8692wthYWpeBaInd1JJ9KfUYR18cwHi+7cU7KlrRRoWe+LChIXSotgTw/Iy8viPzrDwH1/h6jQs9McNuLoOiz0Fq8OToxBe3rkYFsPiil1/ARUv7K6oHzaqAAAAAElFTkSuQmCC', NULL, '', 1612150683918, 1612150689683);
INSERT INTO `magic_api_info` VALUES ('aba4f46feaa8444ebd8b4c4d5e368d96', 'GET', '/tree', 'var toTree = (list, parentId)=>{\r\n    return list.filter(it => it.parent_id == parentId)\r\n               .each(it => {it.children = toTree(list, it.id)})\r\n}\r\n\r\nreturn toTree(db.select(\'select id, group_name, parent_id from magic_group\'), \'0\')', '[]', '[]', 'list转tree', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611909401916, 1611909401916);
INSERT INTO `magic_api_info` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id \r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{uid} and cpt_code = #{code}}\';\r\nreturn db.pm.select(sql);', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738960585\n}', NULL, '', 1611738266010, 1611739047835);
INSERT INTO `magic_api_info` VALUES ('b05e101f2f8142b194c183e5f922c566', 'POST', 'if', 'if(a == 1){\r\n    return 1;\r\n}else if(a == 2){\r\n    return 2;\r\n}else{\r\n    return 0;\r\n}\r\n\r\n/*\r\n对于条件判断，特意支持了简写的方式\r\n如 可以直接写 \r\n1、if(a) \r\n2、else if(a)\r\n3、while(a) \r\n4、a ? 1 : 0 \r\n\r\n当a的值是以下情况时为false\r\nnull\r\n空集合\r\n空Map\r\n数值 == 0\r\n空字符串（length == 0）\r\nfalse\r\n其它情况一律视为true\r\n*/', '[]', '[]', 'if', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612157195050, 1612157195050);
INSERT INTO `magic_api_info` VALUES ('b335b53182df4b1391d3c66de00e0cab', 'GET', 'test/for', 'var sum  = 0;\r\nfor(val in range(0, 100)){\r\n    if(val > 90){break;}\r\n    if(val % 3 == 0){continue;}\r\n    sum = sum + val;\r\n}\r\nreturn sum;', '[]', '[]', 'for循环', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 2700,\n    \"timestamp\": 1612158533348\n}', NULL, '', 1612158386639, 1612158534914);
INSERT INTO `magic_api_info` VALUES ('b4a2fd48db184e709d71f302d1b04c76', 'GET', 'get_stuff_code_list_by_type', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\nimport assert;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的stuff_code list\r\nsql = \'select distinct stuff_code from pm_stuff ?{u_id != null && type != null, where u_id = #{u_id} and stuff_type = #{type}}\';\r\nreturn db.pm.select(sql);\r\n', '[{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"},{\"name\":\"type\",\"value\":\"板材\",\"description\":\"\"}]', '[]', '查询特定材料类型代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611735383369, 1611736367415);
INSERT INTO `magic_api_info` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"haha\",\"description\":\"\"},{\"name\":\"id\",\"value\":\"23333\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1611911916172\n}', NULL, '', 1611911859581, 1612143893194);
INSERT INTO `magic_api_info` VALUES ('bd97791199c14b7db19085ff44062fd0', 'GET', 'pivot', 'var result = db.select(\'select api_method, api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id, group_name from magic_group\');\r\nvar pivot = (list) => list.group(it => it.api_method, values => values.size())\r\nreturn select * from (select mg.group_name, pivot(ma) from result ma \r\n                      join groups mg on mg.id = ma.api_group_id \r\n                      group by ma.api_group_id\r\n                      having count(ma.api_method) > 5\r\n                      ) t order by t.POST desc', '[]', '[]', '使用Linq动态行转列', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611915760528, 1611915760528);
INSERT INTO `magic_api_info` VALUES ('bfee3c8b7d2440189419c21a0dd0402d', 'GET', '/filter', 'var list = [{\r\n    sex : 0,\r\n    name : \'小明\'\r\n},{\r\n    sex : 1,\r\n    name : \'小花\'\r\n}]\r\nreturn list.filter((item)=>item.sex == 0);', '[]', '[]', 'List过滤', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611909008103, 1611909008103);
INSERT INTO `magic_api_info` VALUES ('c2dd8d1b46b147caaee1034a6bd61fc1', 'GET', 'try', 'try{\r\n    var c = 1 / 0\r\n}catch(e){\r\n    return e.getMessage();\r\n}finally{\r\n    return \'finally\'\r\n}\r\nreturn \'ok\';', '[]', '[]', 'try-catch', 'ae60cd38a8b24608bbad75d26c9ed09c', '', '[]', '', NULL, '', 1612157699045, 1612157699045);
INSERT INTO `magic_api_info` VALUES ('c4666f43fce142bc9f3c5bf7d56eafde', 'GET', 'spread', 'var map = {a:1, b:2}\r\nvar list = [1, 2, 3, 4, 5]\r\nreturn {...map, c:3, d:[...list]};', '[]', '[]', '扩展运算符', 'ae60cd38a8b24608bbad75d26c9ed09c', '', '[]', '', NULL, '', 1612157585506, 1612157585506);
INSERT INTO `magic_api_info` VALUES ('c4bc1abf4e844d9b8e0e8e195b637961', 'GET', 'join', 'return select t.*, g.groupName\r\n       from db.camel().select(\'select api_name, api_group_id from magic_api_info\') t\r\n       left join db.camel().select(\'select id, group_name from magic_group\') g on t.apiGroupId = g.id', '[]', '[]', '使用Linq关联', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611916500496, 1611916500496);
INSERT INTO `magic_api_info` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'return ifNull(null,\'为空 -- 1\',\'不为空 -- 2\');', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"不为空 -- 1\",\n    \"timestamp\": 1611889193454\n}', NULL, '', 1611820879001, 1611889201323);
INSERT INTO `magic_api_info` VALUES ('c6009c967c394c19a760900b757c4671', 'GET', 'binary', '/*\r\n    各种操作符测试\r\n*/\r\nimport log;\r\nvar a = 1;\r\nvar b = 2;\r\nlog.info(\"a = \" + a + \", b = \" + b);\r\nvar c = a + b;\r\nlog.info(\"a + b = \" + c);\r\nc = a - b;\r\nlog.info(\"a - b = \" + c);\r\nc = a * b;\r\nlog.info(\"a * b = \" + c);\r\nc = a / b;\r\nlog.info(\"a / b = \" + c);\r\nc = a % b;\r\nlog.info(\"a % b = \" + c);\r\nc = a > b;\r\nlog.info(\"a > b = \" + c);\r\nc = a >= b;\r\nlog.info(\"a >= b = \" + c);\r\nc = a == b;\r\nlog.info(\"a == b = \" + c);\r\nc = a < b;\r\nlog.info(\"a < b = \" + c);\r\nc = a <= b;\r\nlog.info(\"a <= b = \" + c);\r\nc = a != b;\r\nlog.info(\"a != b = \" + c);', '[]', '[]', '操作符', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612151656312, 1612151656312);
INSERT INTO `magic_api_info` VALUES ('c91a959441b44f5ab610ed38db2c994f', 'GET', 'transaction', '// 自动事务\r\nvar val = db.transaction(()=>{\r\n    return db.update(\"\"\"delete from  magic_api_info where id = \'999\'\"\"\")\r\n});\r\nreturn val;', '[]', '[]', '事务', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '', NULL, '', 1612149407912, 1612149407912);
INSERT INTO `magic_api_info` VALUES ('cd1437e367104386a992589fafa1e841', 'GET', '/filter-map', 'var list = [{gender : 0, name : \'小明\'},{gender : 1, name : \'小花\'}]\r\nreturn list.filter(item => item.gender == 0).map((item) => {gender : item.gender == 0 ? \'男\':\'女\', name : item.name});', '[]', '[]', '过滤和转换', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611903768947, 1611903768947);
INSERT INTO `magic_api_info` VALUES ('dbff8dfb0b414c52a6f6048893a2654a', 'GET', 'download', 'return response.download(\'中文测试\', \'str.txt\');', '[]', '[]', '文件下载', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612150801600, 1612150801600);
INSERT INTO `magic_api_info` VALUES ('de9c0f4e71df462c9fa6b346439a3e02', 'GET', 'module', 'import customModule;\r\nreturn customModule.println(\"magic demo\")', '[]', '[]', '调用Java模块', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1612232431997\n}', NULL, '', 1612232421891, 1612232492501);
INSERT INTO `magic_api_info` VALUES ('e9797599fc0d490bb9e1d41f3ffd3e70', 'GET', 'java', 'import \'java.util.Date\' as Date;\r\nimport \'java.text.SimpleDateFormat\' as SimpleDateFormat;\r\nvar now = new Date();\r\nvar df = new SimpleDateFormat(\'yyyy-MM-dd\');\r\nreturn df.format(now);', '[]', '[]', '与java交互', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612152275598, 1612157064012);
INSERT INTO `magic_api_info` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/testdemo/add\' as add\r\nimport \'@/testdemo/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": {\n        \"add\": 3,\n        \"nested\": 3\n    },\n    \"timestamp\": 1611911466832\n}', NULL, '', 1611910100993, 1611911647428);
INSERT INTO `magic_api_info` VALUES ('ea8777fa26404dbc9f3b82ed056e2347', 'GET', '/group', 'return db.select(\'select api_group_id from magic_api_info\')\r\n         .group(it => it.api_group_id, list => list.size())\r\n         .sort((k1, k2, v1, v2) => v2 - v1)', '[]', '[]', '简单分组', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611904006021, 1611904006021);
INSERT INTO `magic_api_info` VALUES ('f1bda1d86b49461a87841f6cc3efd56d', 'GET', 'async', 'var list = [];\r\nfor(index in range(1,10)){\r\n    list.add(async (index)=> db.selectInt(\'select #{index}\'));\r\n}\r\nreturn list.map(f => f.get())', '[]', '[]', '异步执行', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1612144616820, 1612144616820);
INSERT INTO `magic_api_info` VALUES ('f8869c553e51420688015a2344c37386', 'GET', 'page', 'var total = 5;\r\nvar list = [1,2];\r\nreturn response.page(total, list);', '[]', '[]', '自定义分页', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612150902579, 1612150922579);
INSERT INTO `magic_api_info` VALUES ('fa5c93870ad744cdbb959d18930a4b91', 'GET', 'exit', 'if(true){exit 400, \'参数填写有误\'}\r\nexit 200, \'success\', \'ok\'', '[]', '[]', 'exit', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612151009926, 1612151009926);
INSERT INTO `magic_api_info` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker(100,1);', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 99,\n    \"timestamp\": 1611897765450\n}', NULL, '', 1611897458233, 1611911198208);

-- ----------------------------
-- Table structure for magic_api_info_his
-- ----------------------------
DROP TABLE IF EXISTS `magic_api_info_his`;
CREATE TABLE `magic_api_info_his`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT 'api_id',
  `api_method` varchar(12) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求方法',
  `api_path` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '请求路径',
  `api_script` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '接口脚本',
  `api_parameter` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '接口参数',
  `api_option` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '接口选项',
  `api_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '接口名称',
  `api_group_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '分组ID',
  `api_request_body` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '请求体',
  `api_request_header` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '请求Header',
  `api_response_body` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '输出结果',
  `api_response_header` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '输出Header',
  `api_description` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '接口描述',
  `api_create_time` bigint NULL DEFAULT NULL COMMENT '创建时间',
  `api_update_time` bigint NULL DEFAULT NULL COMMENT '修改时间'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = 'MagicAPI接口历史记录' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of magic_api_info_his
-- ----------------------------
INSERT INTO `magic_api_info_his` VALUES ('43d353e5b32247d0ac61f3c56a347747', 'GET', 'get_stuff_code_list', 'var sql = \"select distinct stuff_code from pm_stuff ?{id, where u_id = #{u_id}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"u_id\",\"value\":\"1\",\"description\":\"\"}]', '[]', '查询材料代码列表', '57f09f3501f74d849a03268af56080ee', '{\r\n    \r\n}', '[]', '', NULL, '', 1611650441243, 1611650441243);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select \";', '[]', '[]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '', NULL, '', 1611650776187, 1611650776187);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select \";', '[]', '[]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '', NULL, '', 1611650776187, 1611652498634);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user \" + \r\n\"?{username != null && password != null, where username = #{username} && password = #{password}}\";', '[{\"name\":\"username\",\"value\":\"admin\",\"description\":\"\"},{\"name\":\"password\",\"value\":\"admin\",\"description\":\"\"}]', '[]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '', NULL, '', 1611650776187, 1611652717301);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user \" + \r\n\"?{username != null && password != null, where username = #{username} && password = #{password}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin\",\"description\":\"\"},{\"name\":\"password\",\"value\":\"admin\",\"description\":\"\"}]', '[]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611652717329\n}', NULL, '', 1611650776187, 1611652732739);
INSERT INTO `magic_api_info_his` VALUES ('43d353e5b32247d0ac61f3c56a347747', 'GET', 'get_stuff_code_list', 'var sql = \"select distinct stuff_code from pm_stuff ?{id, where u_id = #{u_id}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"u_id\",\"value\":\"1\",\"description\":\"\"}]', '[]', '查询材料代码列表', '57f09f3501f74d849a03268af56080ee', '{\r\n    \r\n}', '[]', '', NULL, '', 1611650441243, 1611652823980);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user \" + \r\n\"?{username != null && password != null, where username = #{username} and password = #{password}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin\",\"description\":\"\"},{\"name\":\"password\",\"value\":\"admin\",\"description\":\"\"}]', '[]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [],\n    \"timestamp\": 1611652732780\n}', NULL, '', 1611650776187, 1611652971198);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user ?{username != null && password != null, where username = #{username}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin\",\"description\":\"\"}]', '[]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [],\n    \"timestamp\": 1611652971230\n}', NULL, '', 1611650776187, 1611653012020);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user ?{username != null && password != null, where username = #{username}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin3\",\"description\":\"\"}]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"username\": \"admin\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin1\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin2\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin3\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin4\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin5\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin6\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        }\n    ],\n    \"timestamp\": 1611653012041\n}', NULL, '', 1611650776187, 1611653137076);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user ?{username != null, where username = #{username}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin3\",\"description\":\"\"}]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"username\": \"admin\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin1\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin2\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin3\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin4\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin5\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        },\n        {\n            \"username\": \"admin6\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        }\n    ],\n    \"timestamp\": 1611653137109\n}', NULL, '', 1611650776187, 1611653160062);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user ?{username != null, where username = #{username} && ?{password != null, where password = #{password}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin\",\"description\":\"\"},{\"name\":\"password\",\"value\":\"admin\",\"description\":\"\"}]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"username\": \"admin3\",\n            \"password\": \"d033e22ae348aeb5660fc2140aec35850c4da997\"\n        }\n    ],\n    \"timestamp\": 1611653160080\n}', NULL, '', 1611650776187, 1611653215275);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user ?{username != null && password != null, where username = #{username} && password = #{password}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin\",\"description\":\"\"},{\"name\":\"password\",\"value\":\"admin\",\"description\":\"\"}]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"PreparedStatementCallback; bad SQL grammar [select username, password from pm_user where username = ? && where password = ?]; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \'where password = \'admin\'\' at line 1\",\n    \"data\": null,\n    \"timestamp\": 1611653215373\n}', NULL, '', 1611650776187, 1611653270881);
INSERT INTO `magic_api_info_his` VALUES ('5cafed97cb134c1a80505e6f275aeefc', 'GET', 'login', 'var sql = \"select username, password from pm_user ?{username != null && password != null, where username = #{username} && password = #{password}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"username\",\"value\":\"admin\",\"description\":\"\"},{\"name\":\"password\",\"value\":\"d033e22ae348aeb5660fc2140aec35850c4da997\",\"description\":\"\"}]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '登录', '57f09f3501f74d849a03268af56080ee', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [],\n    \"timestamp\": 1611653270916\n}', NULL, '', 1611650776187, 1611653303350);
INSERT INTO `magic_api_info_his` VALUES ('43d353e5b32247d0ac61f3c56a347747', 'GET', 'get_stuff_code_list', 'var sql = \"select distinct stuff_code from pm_stuff ?{id, where u_id = #{u_id}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"u_id\",\"value\":\"1\",\"description\":\"\"}]', '[]', '查询材料代码列表', '57f09f3501f74d849a03268af56080ee', '{\r\n    \r\n}', '[]', '', NULL, '', 1611650441243, 1611659408272);
INSERT INTO `magic_api_info_his` VALUES ('43d353e5b32247d0ac61f3c56a347747', 'GET', 'get_stuff_code_list', 'var sql = \"select distinct stuff_code from pm_stuff ?{id, where u_id = #{u_id}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"u_id\",\"value\":\"1\",\"description\":\"\"}]', '[]', '查询材料代码列表', '57f09f3501f74d849a03268af56080ee', '{\r\n    \r\n}', '[]', '', NULL, '', 1611650441243, 1611659605692);
INSERT INTO `magic_api_info_his` VALUES ('e294b9d09291463ea59212254b5799ec', 'GET', 'get_stuff_code_list_by_u_id', 'var sql = \"select distinct stuff_code from pm_stuff ?{id, where u_id = #{u_id}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"u_id\",\"value\":\"\",\"description\":\"\"}]', '[]', '根据用户id获取材料代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611718342435, 1611718342435);
INSERT INTO `magic_api_info_his` VALUES ('e294b9d09291463ea59212254b5799ec', 'GET', 'get_stuff_code_list_by_u_id', 'var sql = \"select distinct stuff_code from pm_stuff ?{id, where u_id = #{u_id}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"u_id\",\"value\":\"\",\"description\":\"\"}]', '[]', '根据用户id获取材料代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611718342435, 1611719256350);
INSERT INTO `magic_api_info_his` VALUES ('e294b9d09291463ea59212254b5799ec', 'GET', 'get_stuff_code_list_by_u_id', 'var sql = \"select distinct stuff_code from pm_stuff ?{id, where u_id = #{u_id}}\";\r\nreturn db.pm.select(sql);', '[{\"name\":\"u_id\",\"value\":\"\",\"description\":\"\"}]', '[]', '根据用户id获取材料代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611718342435, 1611727264529);
INSERT INTO `magic_api_info_his` VALUES ('03c9cb439db9481d93f2a5eb8dae7407', 'GET', 'parseToken', 'import \'io.jsonwebtoken.Claims\' as Claims;\r\nimport \'io.jsonwebtoken.Jwts\' as Jwts;\r\nimport \'wen.magic.demo.vo.TokenVo\' as TokenVo;\r\nimport assert;\r\n\r\nvar JWT_SECRET_KEY = \"MjAxOHh1ZWxhbmd5dW4wOHNodXpoaTA4\";\r\ntry{\r\n    var claims = Jwts.parser().setSigningKey(JWT_SECRET_KEY).parseClaimsJws(ticket).getBody();\r\n    assert.notNull(claims, 0, \'claims 不能为null\');\r\n}\r\nreturn null;', '[{\"name\":\"ticket\",\"value\":\"\",\"description\":\"\"}]', '[]', 'TokenUtil', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611732378229, 1611732378229);
INSERT INTO `magic_api_info_his` VALUES ('03c9cb439db9481d93f2a5eb8dae7407', 'GET', 'parseToken', 'import \'io.jsonwebtoken.Claims\' as Claims;\r\nimport \'io.jsonwebtoken.Jwts\' as Jwts;\r\nimport \'wen.magic.demo.vo.TokenVo\' as TokenVo;\r\nimport assert;\r\n\r\nvar JWT_SECRET_KEY = \"MjAxOHh1ZWxhbmd5dW4wOHNodXpoaTA4\";\r\ntry{\r\n    var claims = Jwts.parser().setSigningKey(JWT_SECRET_KEY).parseClaimsJws(ticket).getBody();\r\n    assert.notNull(claims, 0, \'claims 不能为null\');\r\n    var vo = new TokenVo();\r\n    vo.setSubject(claims.getSubject());\r\n    vo.setUserId(claims.get(\"userId\", Long.class));\r\n    vo.setExpire(claims.get(\"expire\", Date.class));\r\n    vo.setCreateTime(claims.get(\"createTime\", Date.class));\r\n}\r\nreturn null;', '[{\"name\":\"ticket\",\"value\":\"\",\"description\":\"\"}]', '[]', 'TokenUtil', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611732378229, 1611732448721);
INSERT INTO `magic_api_info_his` VALUES ('03c9cb439db9481d93f2a5eb8dae7407', 'GET', 'parseToken', 'import \'io.jsonwebtoken.Claims\' as Claims;\r\nimport \'io.jsonwebtoken.Jwts\' as Jwts;\r\nimport \'wen.magic.demo.vo.TokenVo\' as TokenVo;\r\nimport \'java.lang.Long\' as Long;\r\nimport \'java.util.Date\' as Date;\r\nimport assert;\r\n\r\nvar JWT_SECRET_KEY = \"MjAxOHh1ZWxhbmd5dW4wOHNodXpoaTA4\";\r\ntry{\r\n    var claims = Jwts.parser().setSigningKey(JWT_SECRET_KEY).parseClaimsJws(ticket).getBody();\r\n    assert.notNull(claims, 0, \'claims 不能为null\');\r\n    var vo = new TokenVo();\r\n    vo.setSubject(claims.getSubject());\r\n    vo.setUserId(claims.get(\"userId\", Long.class));\r\n    vo.setExpire(claims.get(\"expire\", Date.class));\r\n    vo.setCreateTime(claims.get(\"createTime\", Date.class));\r\n    return vo;\r\n}\r\nreturn null;', '[{\"name\":\"ticket\",\"value\":\"\",\"description\":\"\"}]', '[]', 'TokenUtil', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611732378229, 1611732559645);
INSERT INTO `magic_api_info_his` VALUES ('1e6d905fe9a04647a9c24d260b3fc447', 'GET', 'stuff_util', 'import \'org.apache.commons.lang3.StringUtils\' as StringUtils;\r\nimport TokenUtil;\r\n\r\nif(StringUtils.isBlank(token)) {return null};\r\nvar vo = Token', '[{\"name\":\"token\",\"value\":\"\",\"description\":\"\"}]', '[]', 'StuffUtil', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611733072784, 1611733072784);
INSERT INTO `magic_api_info_his` VALUES ('b4a2fd48db184e709d71f302d1b04c76', 'GET', 'get_stuff_code_list_by_type', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\nimport \'wen.magic.demo.util.TokenUtil\' as TokenUtil;\r\nimport \'java.lang.String\' as String;\r\nimport assert;\r\n\r\nvar uid = PmUtil.getUId(token);\r\nassert.notEmpty(uid, 0, \'用户id不能为空\');\r\nassert.notEmpty(type, 0, \'type不能为空\');', '[{\"name\":\"token\",\"value\":\"\",\"description\":\"\"},{\"name\":\"type\",\"value\":\"\",\"description\":\"\"}]', '[]', '查询特定材料类型代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611735383369, 1611735383369);
INSERT INTO `magic_api_info_his` VALUES ('b4a2fd48db184e709d71f302d1b04c76', 'GET', 'get_stuff_code_list_by_type', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\nimport \'java.lang.String\' as String;\r\nimport assert;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\nassert.notEmpty(uid, 0, \'用户id不能为空\');\r\nassert.notEmpty(type, 0, \'type不能为空\');\r\n\r\n// 从数据库获取符合条件的stuff_code list\r\nsql = \'select distinct stuff_code from \';\r\n', '[{\"name\":\"token\",\"value\":\"\",\"description\":\"\"},{\"name\":\"type\",\"value\":\"\",\"description\":\"\"}]', '[]', '查询特定材料类型代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611735383369, 1611735903005);
INSERT INTO `magic_api_info_his` VALUES ('b4a2fd48db184e709d71f302d1b04c76', 'GET', 'get_stuff_code_list_by_type', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\nimport \'java.lang.String\' as String;\r\nimport assert;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的stuff_code list\r\nsql = \'select distinct stuff_code from pm_stuff ?{u_id != null && type != null, where u_id = #{u_id} and stuff_type = #{type}}\';\r\n', '[{\"name\":\"token\",\"value\":\"\",\"description\":\"\"},{\"name\":\"type\",\"value\":\"\",\"description\":\"\"}]', '[]', '查询特定材料类型代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611735383369, 1611736140691);
INSERT INTO `magic_api_info_his` VALUES ('b4a2fd48db184e709d71f302d1b04c76', 'GET', 'get_stuff_code_list_by_type', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\nimport assert;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的stuff_code list\r\nsql = \'select distinct stuff_code from pm_stuff ?{u_id != null && type != null, where u_id = #{u_id} and stuff_type = #{type}}\';\r\nreturn db.pm.select(sql);\r\n', '[{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"},{\"name\":\"type\",\"value\":\"板材\",\"description\":\"\"}]', '[]', '查询特定材料类型代码列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611735383369, 1611736367415);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component\' \r\n      + \'?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611738266010, 1611738266010);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component\' \r\n      + \'?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"110000005301\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611738266010, 1611738295682);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"110000005301\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738295718\n}', NULL, '', 1611738266010, 1611738311430);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"110000005301\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738311457\n}', NULL, '', 1611738266010, 1611738313309);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738313326\n}', NULL, '', 1611738266010, 1611738412695);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738412715\n}', NULL, '', 1611738266010, 1611738461912);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738412715\n}', NULL, '', 1611738266010, 1611738462402);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{u_id} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738462437\n}', NULL, '', 1611738266010, 1611738521663);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{uid} and cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738462437\n}', NULL, '', 1611738266010, 1611738612309);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id 与 type 值\r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738612342\n}', NULL, '', 1611738266010, 1611738732068);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id \r\nvar u_id = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{code, where cpt_code = #{code}}\';', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738732094\n}', NULL, '', 1611738266010, 1611738960557);
INSERT INTO `magic_api_info_his` VALUES ('acfdc357176f45a0898892deace603d1', 'GET', 'get_component_by_code', 'import \'wen.magic.demo.util.PmUtil\' as PmUtil;\r\n\r\n// 获取 u_id \r\nvar uid = PmUtil.getUId(token);\r\n\r\n// 从数据库获取符合条件的 PmComponent\r\nsql = \'select cpt_code, cpt_count, cpt_size, stuff_code, cpt_direction from pm_component ?{uid != null && code != null, where u_id = #{uid} and cpt_code = #{code}}\';\r\nreturn db.pm.select(sql);', '[{\"name\":\"code\",\"value\":\"2585A01011G700-1\",\"description\":\"\"},{\"name\":\"token\",\"value\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjEsImV4cGlyZSI6MTYxMDc0ODM4NDU2MiwiY3JlYXRlVGltZSI6MTYxMDcwNTE4NDU2Miwic3ViIjoiWFVFTEFOR1lVTl9PU19QTSJ9.jonXkPiA9DECCgY82EeJw0xjbOHB7Jub9RgdM6Sp3wg\",\"description\":\"\"}]', '[]', '根据零件代码获取唯一零件', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1611738960585\n}', NULL, '', 1611738266010, 1611739047835);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn CustomFunc.whatAboutNow();', '[]', '[]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '', NULL, '', 1611820879001, 1611820879001);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn CustomFunc.whatAboutNow();', '[]', '[]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"2021-01-28T08:01:19.076+00:00\",\n    \"timestamp\": 1611820879076\n}', NULL, '', 1611820879001, 1611820939909);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn CustomFunc.customNow();', '[]', '[]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"2021-01-28T08:01:19.076+00:00\",\n    \"timestamp\": 1611820879076\n}', NULL, '', 1611820879001, 1611820967363);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn CustomFunc.date_format(new Date());', '[]', '[]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"2021-01-28T08:02:47.395+00:00\",\n    \"timestamp\": 1611820967396\n}', NULL, '', 1611820879001, 1611821286275);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn CustomFunc.ifNull(null, 2, 3);', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"2021-01-28 16:08:06\",\n    \"timestamp\": 1611821286303\n}', NULL, '', 1611820879001, 1611821597759);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn CustomFunc.ifNull(1, 2, 3);', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 2,\n    \"timestamp\": 1611821597853\n}', NULL, '', 1611820879001, 1611821611790);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn ifnull(null,111);', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 3,\n    \"timestamp\": 1611821611825\n}', NULL, '', 1611820879001, 1611821647275);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn ifnull(222,111);', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 111,\n    \"timestamp\": 1611821647301\n}', NULL, '', 1611820879001, 1611821655455);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', '// import \'wen.magic.demo.func.CustomFunc\' as CustomFunc;\r\n\r\nreturn customNow();', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 111,\n    \"timestamp\": 1611821647301\n}', NULL, '', 1611820879001, 1611821762481);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'return dateFormat(new Date());', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"2021-01-28T08:16:02.534+00:00\",\n    \"timestamp\": 1611821762534\n}', NULL, '', 1611820879001, 1611821784218);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'return customNow();', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"2021-01-28T08:16:02.534+00:00\",\n    \"timestamp\": 1611821762534\n}', NULL, '', 1611820879001, 1611889133005);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'return ifNull(null,\'不为空 -- 1\',\'为空 -- 2\');', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"2021-01-29T02:58:53.071+00:00\",\n    \"timestamp\": 1611889133072\n}', NULL, '', 1611820879001, 1611889193428);
INSERT INTO `magic_api_info_his` VALUES ('c51c7b5487434ea38175feb1d6e6a570', 'GET', 'custom', 'return ifNull(null,\'为空 -- 1\',\'不为空 -- 2\');', '[]', '[{\"name\":\"\",\"value\":\"\",\"description\":\"\"}]', '自定义函数调用', 'cf0d1a9ad00d45299b27830831db9a5a', '{}', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"不为空 -- 1\",\n    \"timestamp\": 1611889193454\n}', NULL, '', 1611820879001, 1611889201323);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'return compare(100,1)', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1611897458233, 1611897458233);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'return invoke();', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"找不到方法 compare(Integer,Integer)\",\n    \"data\": null,\n    \"timestamp\": 1611897458290\n}', NULL, '', 1611897458233, 1611897500058);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'return invoker();', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"找不到方法 compare(Integer,Integer)\",\n    \"data\": null,\n    \"timestamp\": 1611897458290\n}', NULL, '', 1611897458233, 1611897681287);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'return invoker();', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"找不到方法 compare(Integer,Integer)\",\n    \"data\": null,\n    \"timestamp\": 1611897458290\n}', NULL, '', 1611897458233, 1611897713804);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker();', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"找不到方法 invoker()\",\n    \"data\": null,\n    \"timestamp\": 1611897713829\n}', NULL, '', 1611897458233, 1611897755607);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker();', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"找不到方法 invoker()\",\n    \"data\": null,\n    \"timestamp\": 1611897713829\n}', NULL, '', 1611897458233, 1611897755944);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker(100,1);', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"[>]操作的值不能为空\",\n    \"data\": null,\n    \"timestamp\": 1611897755971\n}', NULL, '', 1611897458233, 1611897765421);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker(100,1);', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 99,\n    \"timestamp\": 1611897765450\n}', NULL, '', 1611897458233, 1611897773578);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker(100,1);', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 99,\n    \"timestamp\": 1611897765450\n}', NULL, '', 1611897458233, 1611900142745);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker(100,1);', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 99,\n    \"timestamp\": 1611897765450\n}', NULL, '', 1611897458233, 1611900145037);
INSERT INTO `magic_api_info_his` VALUES ('a49afaac0d044cd0ae88a6ee43e13b4c', 'GET', '/pivot', 'var result = db.select(\'select api_method, api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id, group_name from magic_group\');\r\nvar pivot = (list)=>list.group(it=> it.api_method, values=> values.size())\r\nvar start = System.currentTimeMillis();\r\nvar value =     \r\n    select * from (\r\n        select \r\n            mg.group_name\r\n        from result ma \r\n        join groups mg on mg.id = ma.api_group_id\r\n        group by ma.api_group_id\r\n        having count(ma.api_method) > 5\r\n    ) t order by t.POST desc\r\nvar time = System.currentTimeMillis() = start;\r\nexit 200, \'耗时：\' + time,value;', '[]', '[]', '动态行转列', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611901104539, 1611901104539);
INSERT INTO `magic_api_info_his` VALUES ('a49afaac0d044cd0ae88a6ee43e13b4c', 'GET', '/pivot', 'var result = db.select(\'select api_method, api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id, group_name from magic_group\');\r\nvar pivot = (list)=>list.group(it=> it.api_method, values=> values.size())\r\nvar start = System.currentTimeMillis();\r\nvar value =     \r\n    select * from (\r\n        select \r\n            mg.group_name\r\n        from result ma \r\n        join groups mg on mg.id = ma.api_group_id\r\n        group by ma.api_group_id\r\n        having count(ma.api_method) > 5\r\n    ) t order by t.POST desc\r\nvar time = System.currentTimeMillis() = start;\r\nexit 200, \'耗时：\' + time,value;', '[]', '[]', '动态行转列', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611901104539, 1611901117948);
INSERT INTO `magic_api_info_his` VALUES ('a49afaac0d044cd0ae88a6ee43e13b4c', 'GET', '/pivot', 'var result = db.select(\'select api_method,api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id,group_name from magic_group\');\r\nvar pivot = (list)=>list.group(it=> it.api_method,values=> values.size())\r\nvar start = System.currentTimeMillis();\r\nvar value =\r\n    select * from (\r\n        select \r\n            mg.group_name\r\n        from result ma \r\n        join groups mg on mg.id = ma.api_group_id\r\n        group by ma.api_group_id\r\n        having count(ma.api_method) > 5\r\n    ) t order by t.POST desc\r\n// 期待结果如下\r\n/*\r\n  -     GET    POST \r\n分组1    X       X\r\n分组2    X       X\r\n分组3    X       X\r\n分组4    X       X\r\n其中X为该分组对应请求方法的数量\r\n*/\r\nvar time = System.currentTimeMillis() - start;\r\nexit 200,\'耗时：\' + time,value', '[]', '[]', '动态行转列', '4591af9bd7ff447398f3417554cfff15', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"赋值目标应为变量\",\n    \"data\": null,\n    \"timestamp\": 1611901118002\n}', NULL, '', 1611901104539, 1611901131203);
INSERT INTO `magic_api_info_his` VALUES ('a49afaac0d044cd0ae88a6ee43e13b4c', 'GET', '/pivot', 'var result = db.select(\'select api_method,api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id,group_name from magic_group\');\r\nvar pivot = (list)=>list.group(it=> it.api_method,values=> values.size())\r\nvar start = System.currentTimeMillis();\r\nvar value =\r\n    select * from (\r\n        select \r\n            mg.group_name\r\n        from result ma \r\n        join groups mg on mg.id = ma.api_group_id\r\n        group by ma.api_group_id\r\n        having count(ma.api_method) > 5\r\n    ) t order by t.POST desc\r\n// 期待结果如下\r\n/*\r\n  -     GET    POST \r\n分组1    X       X\r\n分组2    X       X\r\n分组3    X       X\r\n分组4    X       X\r\n其中X为该分组对应请求方法的数量\r\n*/\r\nvar time = System.currentTimeMillis() - start;\r\nexit 200,\'耗时：\' + time,value', '[]', '[]', '动态行转列', '4591af9bd7ff447398f3417554cfff15', '', '[]', '{\n    \"code\": 200,\n    \"message\": \"耗时：2\",\n    \"data\": [],\n    \"timestamp\": 1611901131242\n}', NULL, '', 1611901104539, 1611901134362);
INSERT INTO `magic_api_info_his` VALUES ('a49afaac0d044cd0ae88a6ee43e13b4c', 'GET', '/pivot', 'var result = db.select(\'select api_method,api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id,group_name from magic_group\');\r\nvar pivot = (list)=>list.group(it=> it.api_method,values=> values.size())\r\nvar start = System.currentTimeMillis();\r\nvar value =\r\n    select * from (\r\n        select \r\n            mg.group_name\r\n        from result ma \r\n        join groups mg on mg.id = ma.api_group_id\r\n        group by ma.api_group_id\r\n        having count(ma.api_method) > 5\r\n    ) t order by t.POST desc\r\n// 期待结果如下\r\n/*\r\n  -     GET    POST \r\n分组1    X       X\r\n分组2    X       X\r\n分组3    X       X\r\n分组4    X       X\r\n其中X为该分组对应请求方法的数量\r\n*/\r\nvar time = System.currentTimeMillis() - start;\r\nexit 200,\'耗时：\' + time,value', '[]', '[]', '动态行转列', '4591af9bd7ff447398f3417554cfff15', '', '[]', '{\n    \"code\": 200,\n    \"message\": \"耗时：2\",\n    \"data\": [],\n    \"timestamp\": 1611901131242\n}', NULL, '', 1611901104539, 1611901134834);
INSERT INTO `magic_api_info_his` VALUES ('a49afaac0d044cd0ae88a6ee43e13b4c', 'GET', '/pivot', 'var result = db.select(\'select api_method,api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id,group_name from magic_group\');\r\nvar pivot = (list)=>list.group(it=> it.api_method,values=> values.size())\r\nvar start = System.currentTimeMillis();\r\nvar value =\r\n    select * from (\r\n        select \r\n            mg.group_name\r\n        from result ma \r\n        join groups mg on mg.id = ma.api_group_id\r\n        group by ma.api_group_id\r\n        having count(ma.api_method) > 5\r\n    ) t order by t.POST desc\r\n// 期待结果如下\r\n/*\r\n  -     GET    POST \r\n分组1    X       X\r\n分组2    X       X\r\n分组3    X       X\r\n分组4    X       X\r\n其中X为该分组对应请求方法的数量\r\n*/\r\nvar time = System.currentTimeMillis() - start;\r\nexit 200,\'耗时：\' + time,value', '[]', '[]', '动态行转列', '4591af9bd7ff447398f3417554cfff15', '', '[]', '{\n    \"code\": 200,\n    \"message\": \"耗时：2\",\n    \"data\": [],\n    \"timestamp\": 1611901134866\n}', NULL, '', 1611901104539, 1611901214312);
INSERT INTO `magic_api_info_his` VALUES ('cd1437e367104386a992589fafa1e841', 'GET', '/filter-map', 'var list = [{gender : 0, name : \'小明\'},{gender : 1, name : \'小花\'}]\r\nreturn list.filter(item => item.gender == 0).map((item) => {gender : item.gender == 0 ? \'男\':\'女\', name : item.name});', '[]', '[]', '过滤和转换', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611903768947, 1611903768947);
INSERT INTO `magic_api_info_his` VALUES ('ea8777fa26404dbc9f3b82ed056e2347', 'GET', '/group', 'return db.select(\'select api_group_id from magic_api_info\')\r\n         .group(it => it.api_group_id, list => list.size())\r\n         .sort((k1, k2, v1, v2) => v2 - v1)', '[]', '[]', '简单分组', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611904006021, 1611904006021);
INSERT INTO `magic_api_info_his` VALUES ('24004f976c6f48d4af65dfd2f416df6f', 'GET', 'format', 'var val = new Date();\r\nreturn {\'使用.format\': val.format(\'yyyy-MM-dd\'),\r\n        \'使用date_format\' : date_format(val)\r\n        }', '[]', '[]', '日期格式化', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611904429996, 1611904429996);
INSERT INTO `magic_api_info_his` VALUES ('24004f976c6f48d4af65dfd2f416df6f', 'GET', 'format', 'var val = new Date();\r\nreturn {\'使用.format\': val.format(\'yyyy-MM-dd\'),\r\n        \'使用date_format\' : date_format(val)\r\n        }', '[]', '[]', '日期格式化', '4591af9bd7ff447398f3417554cfff15', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": {\n        \"使用.format\": \"2021-01-29\",\n        \"使用date_format\": \"2021-01-29 15:13:50\"\n    },\n    \"timestamp\": 1611904430039\n}', NULL, '', 1611904429996, 1611904436774);
INSERT INTO `magic_api_info_his` VALUES ('2d15ce85da1d425db0be16a429233cc7', 'GET', 'join', 'return db.camel().select(\'select api_name, api_group_id from magic_api_info\')\r\n         .join(db.camel().select(\'select id, group_name from magic_group\'), (t1, t2) => t1.apiGroupId == t2.id)\r\n         .map(it => {name : it.apiName, groupId : it.apiGroupId, groupName : it.groupName})', '[]', '[]', '手动关联', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611908207382, 1611908207382);
INSERT INTO `magic_api_info_his` VALUES ('2d15ce85da1d425db0be16a429233cc7', 'GET', 'join', 'return db.camel().select(\'select api_name, api_group_id from magic_api_info\')\r\n         .join(db.camel().select(\'select id, group_name from magic_group\'), (t1, t2) => t1.apiGroupId == t2.id)\r\n         .map(it => {name : it.apiName, groupId : it.apiGroupId, groupName : it.groupName})', '[]', '[]', '手动关联', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611908207382, 1611908209015);
INSERT INTO `magic_api_info_his` VALUES ('3d1aa6178a6c44bd9cdad630b213d072', 'GET', 'map', 'var list = [{\r\n    sex : 0,\r\n    name : \'小明\',\r\n    age : 19\r\n},{\r\n    sex : 1,\r\n    name : \'小花\',\r\n    age : 18\r\n}];\r\n\r\nvar getAge = (age)=>{return age > 18? \'成人\' : \'未成年\'}\r\nreturn list.map((item)=>{age : getAge(item.age), sex : item.sex == 0? \'男\' : \'女\', name : item.name});', '[]', '[]', '字段转换', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611908860435, 1611908860435);
INSERT INTO `magic_api_info_his` VALUES ('bfee3c8b7d2440189419c21a0dd0402d', 'GET', '/filter', 'var list = [{\r\n    sex : 0,\r\n    name : \'小明\'\r\n},{\r\n    sex : 1,\r\n    name : \'小花\'\r\n}]\r\nreturn list.filter((item)=>item.sex == 0);', '[]', '[]', 'List过滤', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611909008103, 1611909008103);
INSERT INTO `magic_api_info_his` VALUES ('aba4f46feaa8444ebd8b4c4d5e368d96', 'GET', '/tree', 'var toTree = (list, parentId)=>{\r\n    return list.filter(it => it.parent_id == parentId)\r\n               .each(it => {it.children = toTree(list, it.id)})\r\n}\r\n\r\nreturn toTree(db.select(\'select id, group_name, parent_id from magic_group\'), \'0\')', '[]', '[]', 'list转tree', '4591af9bd7ff447398f3417554cfff15', '', '[]', '', NULL, '', 1611909401916, 1611909401916);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/test/add\' as add', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611910100993, 1611910100993);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/test/add\' as add\r\nreturn add(1, 2);', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611910100993, 1611910415227);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/test/add\' as add\r\nimport \'@/test/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"function [/test/add] not found.\",\n    \"data\": null,\n    \"timestamp\": 1611910415278\n}', NULL, '', 1611910100993, 1611910556508);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/test/add\' as add\r\nimport \'@/test/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"function [/test/add] not found.\",\n    \"data\": null,\n    \"timestamp\": 1611910556529\n}', NULL, '', 1611910100993, 1611910637168);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', '// import \'@/test/add\' as add\r\nimport \'@/test/nested\' as nested\r\nreturn {\r\n    // \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"function [/test/add] not found.\",\n    \"data\": null,\n    \"timestamp\": 1611910556529\n}', NULL, '', 1611910100993, 1611910819007);
INSERT INTO `magic_api_info_his` VALUES ('fad377e76caf4cf59b5c04ea83aae608', 'GET', 'invoke_func', 'import \'@/func/invoker\' as invoker;\r\nreturn invoker(100,1);', '[]', '[]', '调用函数列表', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 99,\n    \"timestamp\": 1611897765450\n}', NULL, '', 1611897458233, 1611911198208);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/test/add\' as add\r\nimport \'@/test/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"function [/test/nested] not found.\",\n    \"data\": null,\n    \"timestamp\": 1611910819028\n}', NULL, '', 1611910100993, 1611911256755);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/testdemo/add\' as add\r\nimport \'@/testdemo/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"function [/test/add] not found.\",\n    \"data\": null,\n    \"timestamp\": 1611911256775\n}', NULL, '', 1611910100993, 1611911347899);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/testdemo/add\' as add\r\nimport \'@/testdemo/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"function [/test/add] not found.\",\n    \"data\": null,\n    \"timestamp\": 1611911256775\n}', NULL, '', 1611910100993, 1611911348790);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/testdemo/add\' as add\r\nimport \'@/testdemo/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"function [/test/add] not found.\",\n    \"data\": null,\n    \"timestamp\": 1611911256775\n}', NULL, '', 1611910100993, 1611911466810);
INSERT INTO `magic_api_info_his` VALUES ('e9a480a93cab46e3ab8eea159eb47d11', 'GET', 'func', 'import \'@/testdemo/add\' as add\r\nimport \'@/testdemo/nested\' as nested\r\nreturn {\r\n    \'add\' : add(1,2),\r\n    \'nested\' : nested()\r\n}', '[]', '[]', '调用函数', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": {\n        \"add\": 3,\n        \"nested\": 3\n    },\n    \"timestamp\": 1611911466832\n}', NULL, '', 1611910100993, 1611911647428);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"Hello MagicAPI\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1611911859581, 1611911859581);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"Hello MagicAPI\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1611911859581, 1611911859972);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"23333\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 0,\n    \"message\": \"id 必须是数字\",\n    \"data\": null,\n    \"timestamp\": 1611911859992\n}', NULL, '', 1611911859581, 1611911881204);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"23333\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 0,\n    \"message\": \"id 必须是数字\",\n    \"data\": null,\n    \"timestamp\": 1611911881239\n}', NULL, '', 1611911859581, 1611911884813);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"23333\",\"description\":\"\"},{\"name\":\"id\",\"value\":\"haha\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 0,\n    \"message\": \"id 必须是数字\",\n    \"data\": null,\n    \"timestamp\": 1611911881239\n}', NULL, '', 1611911859581, 1611911907246);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"haha\",\"description\":\"\"},{\"name\":\"id\",\"value\":\"23333\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 0,\n    \"message\": \"id 必须是数字\",\n    \"data\": null,\n    \"timestamp\": 1611911907268\n}', NULL, '', 1611911859581, 1611911916148);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"haha\",\"description\":\"\"},{\"name\":\"id\",\"value\":\"23333\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1611911916172\n}', NULL, '', 1611911859581, 1611911923856);
INSERT INTO `magic_api_info_his` VALUES ('210b3b49036d4348894a70e6fb29cb97', 'GET', 'call', 'import \'@get:/other/assert\' as test;\r\nvar id = \'1\';\r\nvar message = \'hello\'\r\nreturn test();', '[]', '[]', '调用其他接口', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611912221964, 1611912221964);
INSERT INTO `magic_api_info_his` VALUES ('210b3b49036d4348894a70e6fb29cb97', 'GET', 'call', 'import \'@get:/other/assert\' as test;\r\nvar id = \'1\';\r\nvar message = \'hello\'\r\nreturn test();', '[]', '[]', '调用其他接口', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1611912221988\n}', NULL, '', 1611912221964, 1611912223550);
INSERT INTO `magic_api_info_his` VALUES ('210b3b49036d4348894a70e6fb29cb97', 'GET', 'call', 'import \'@get:/other/assert\' as test;\r\nvar id = \'1\';\r\nvar message = \'hello\'\r\nreturn test();', '[]', '[]', '调用其他接口', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1611912221988\n}', NULL, '', 1611912221964, 1611912681261);
INSERT INTO `magic_api_info_his` VALUES ('210b3b49036d4348894a70e6fb29cb97', 'GET', 'call', 'import \'@get:/other/assert\' as test;\r\nvar id = \'1\';\r\nvar message = \'hello\'\r\nreturn test();', '[]', '[]', '调用其他接口', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1611912681279\n}', NULL, '', 1611912221964, 1611914312248);
INSERT INTO `magic_api_info_his` VALUES ('4b7509246b8948cea088d33448c2fb74', 'GET', 'null', 'var list = [{name : null, age : 18}, {name : \'小明\'}]\r\nreturn select t.name || \'无名\' name, ifnull(t.age, 20, t.age) age from list t', '[]', '[]', '空值转换', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611914535078, 1611914535078);
INSERT INTO `magic_api_info_his` VALUES ('4b7509246b8948cea088d33448c2fb74', 'GET', 'null', 'var list = [{name : null, age : 18}, {name : \'小明\'}]\r\nreturn select t.name || \'无名\' name, ifnull(t.age, 20) age from list t', '[]', '[]', '空值转换', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"找不到方法 ifnull(Integer,Integer,Integer)\",\n    \"data\": null,\n    \"timestamp\": 1611914535108\n}', NULL, '', 1611914535078, 1611914571787);
INSERT INTO `magic_api_info_his` VALUES ('bd97791199c14b7db19085ff44062fd0', 'GET', 'pivot', 'var result = db.select(\'select api_method, api_group_id from magic_api_info\');\r\nvar groups = db.select(\'select id, group_name from magic_group\');\r\nvar pivot = (list) => list.group(it => it.api_method, values => values.size())\r\nreturn select * from (select mg.group_name, pivot(ma) from result ma \r\n                      join groups mg on mg.id = ma.api_group_id \r\n                      group by ma.api_group_id\r\n                      having count(ma.api_method) > 5\r\n                      ) t order by t.POST desc', '[]', '[]', '使用Linq动态行转列', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611915760528, 1611915760528);
INSERT INTO `magic_api_info_his` VALUES ('3713bc1be3174e80b9ec91441c5d57f7', 'GET', '/group', 'return select t.api_group_id, count(t.api_group_id) count\r\n       from db.select(\'select api_group_id from magic_api_info\') t\r\n       group by t.api_group_id\r\n       order by count(t.api_group_id) desc', '[]', '[]', '使用Linq分组', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611916132108, 1611916132108);
INSERT INTO `magic_api_info_his` VALUES ('3713bc1be3174e80b9ec91441c5d57f7', 'GET', '/group', 'return select t.api_group_id, count(t.api_group_id) count\r\n       from db.select(\'select api_group_id from magic_api_info\') t\r\n       group by t.api_group_id\r\n       order by count(t.api_group_id) desc', '[]', '[]', '使用Linq分组', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"api_group_id\": \"4591af9bd7ff447398f3417554cfff15\",\n            \"count\": 8\n        },\n        {\n            \"api_group_id\": \"88b03ba01ba348bbb1d40203fed80fbb\",\n            \"count\": 5\n        },\n        {\n            \"api_group_id\": \"cf0d1a9ad00d45299b27830831db9a5a\",\n            \"count\": 4\n        },\n        {\n            \"api_group_id\": \"3a7413109fda430da4f5e76dddaa5c6f\",\n            \"count\": 1\n        }\n    ],\n    \"timestamp\": 1611916132149\n}', NULL, '', 1611916132108, 1611916155224);
INSERT INTO `magic_api_info_his` VALUES ('c4bc1abf4e844d9b8e0e8e195b637961', 'GET', 'join', 'return select t.*, g.groupName\r\n       from db.camel().select(\'select api_name, api_group_id from magic_api_info\') t\r\n       left join db.camel().select(\'select id, group_name from magic_group\') g on t.apiGroupId = g.id', '[]', '[]', '使用Linq关联', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611916500496, 1611916500496);
INSERT INTO `magic_api_info_his` VALUES ('1c4dab17be8641a19cfd37ebbe8bddda', 'GET', 'filter', 'var list = [{\r\n    sex : 0,\r\n    name : \'小明\'\r\n},{\r\n    sex : 1,\r\n    name : \'小花\'\r\n}]\r\nreturn select * from list t where t.sex = 0', '[]', '[]', '使用Linq过滤', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611916610265, 1611916610265);
INSERT INTO `magic_api_info_his` VALUES ('1c4dab17be8641a19cfd37ebbe8bddda', 'GET', 'filter', 'var list = [{\r\n    sex : 0,\r\n    name : \'小明\'\r\n},{\r\n    sex : 1,\r\n    name : \'小花\'\r\n}]\r\nreturn select * from list t where t.sex = 0', '[]', '[]', '使用Linq过滤', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"sex\": 0,\n            \"name\": \"小明\"\n        }\n    ],\n    \"timestamp\": 1611916610305\n}', NULL, '', 1611916610265, 1611916614375);
INSERT INTO `magic_api_info_his` VALUES ('4cc1cfdd704c484db15015ced896aeb4', 'GET', 'tree', 'var toTree = (list, parentId) => select t.*, toTree(list, t.id) children from list t where t.parent_id = parentId', '[]', '[]', '使用Linq转Tree', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611916790361, 1611916790361);
INSERT INTO `magic_api_info_his` VALUES ('4cc1cfdd704c484db15015ced896aeb4', 'GET', 'tree', 'var toTree = (list, parentId) => select t.*, toTree(list, t.id) children from list t where t.parent_id = parentId\r\n\r\nreturn toTree(db.select(\'select id, group_name, parent_id from magic_group\'), \'0\')', '[]', '[]', '使用Linq转Tree', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '', NULL, '', 1611916790361, 1611916866211);
INSERT INTO `magic_api_info_his` VALUES ('4cc1cfdd704c484db15015ced896aeb4', 'GET', 'tree', 'var toTree = (list, parentId) => select t.*, toTree(list, t.id) children from list t where t.parent_id = parentId\r\n\r\nreturn toTree(db.select(\'select id, group_name, parent_id from magic_group\'), \'0\')', '[]', '[]', '使用Linq转Tree', '88b03ba01ba348bbb1d40203fed80fbb', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"3a7413109fda430da4f5e76dddaa5c6f\",\n            \"group_name\": \"demo3其他测试\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"4591af9bd7ff447398f3417554cfff15\",\n            \"group_name\": \"demo1结果转换\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"6671dfa08b674e7194e4df1aeb3fe57d\",\n            \"group_name\": \"测试函数\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"82e1a4c8a19b4f30a1c24892434e8e87\",\n            \"group_name\": \"函数测试\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"88b03ba01ba348bbb1d40203fed80fbb\",\n            \"group_name\": \"demo2Linq转换\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        },\n        {\n            \"id\": \"cf0d1a9ad00d45299b27830831db9a5a\",\n            \"group_name\": \"材料\",\n            \"parent_id\": \"0\",\n            \"children\": []\n        }\n    ],\n    \"timestamp\": 1611916866238\n}', NULL, '', 1611916790361, 1611916878455);
INSERT INTO `magic_api_info_his` VALUES ('b6919c1461cd4bbab9b0caecf4be3a29', 'GET', 'assert', 'import assert;\r\nassert.notNull(message, 0, \'message 不能为null\');\r\nassert.regx(id, \'\\d+\', 0, \'id 必须是数字\');\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"haha\",\"description\":\"\"},{\"name\":\"id\",\"value\":\"23333\",\"description\":\"\"}]', '[]', '参数验证', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1611911916172\n}', NULL, '', 1611911859581, 1612143893194);
INSERT INTO `magic_api_info_his` VALUES ('3c283419514540e5a2c4e7c45c9e84f1', 'GET', 'log', 'import log;\r\nlog.info(\"info 日志：{}\",message);\r\nlog.warn(\'warn 日志\');\r\ntry{\r\n    return 1 / 0;\r\n}catch(e){\r\n    log.error(\'error日志\',e);\r\n}\r\nreturn \'OK\';', '[{\"name\":\"message\",\"value\":\"Hello\",\"description\":\"\"}]', '[]', '测试日志', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1612144136308, 1612144136308);
INSERT INTO `magic_api_info_his` VALUES ('863c2fe75be5410cb93ae9e9d6afe2b3', 'GET', 'config', 'import env;\r\nreturn env.get(\'magic-api.web\')', '[]', '[]', '读取配置', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1612144269525, 1612144269525);
INSERT INTO `magic_api_info_his` VALUES ('f1bda1d86b49461a87841f6cc3efd56d', 'GET', 'async', 'var list = [];\r\nfor(index in range(1,10)){\r\n    list.add(async (index)=> db.selectInt(\'select #{index}\'));\r\n}\r\nreturn list.map(f => f.get())', '[]', '[]', '异步执行', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1612144616820, 1612144616820);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expressiom', 'var ids = [\'1\', \'2\', \'3\'];\r\ndb.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'123\';\r\ndb.select(\"select * from magic_api_info where id = \'${id}\'\")\r\ndb.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")\r\nreturn \'ok\';', '[]', '[]', '参数测试', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '', NULL, '', 1612145215453, 1612145215453);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expressiom', 'var ids = [\'1\', \'2\', \'3\'];\r\ndb.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'123\';\r\ndb.select(\"select * from magic_api_info where id = \'${id}\'\")\r\ndb.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")\r\nreturn \'ok\';', '[]', '[]', '参数测试', '3a7413109fda430da4f5e76dddaa5c6f', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1612145215501\n}', NULL, '', 1612145215453, 1612145233571);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1\', \'2\', \'3\'];\r\ndb.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'123\';\r\ndb.select(\"select * from magic_api_info where id = \'${id}\'\")\r\ndb.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"Hello\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1612145233603\n}', NULL, '', 1612145215453, 1612145364931);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1\', \'2\', \'3\'];\r\ndb.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'123\';\r\ndb.select(\"select * from magic_api_info where id = \'${id}\'\")\r\ndb.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")\r\nreturn \'ok\';', '[{\"name\":\"message\",\"value\":\"Hello\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1612145364977\n}', NULL, '', 1612145215453, 1612145392101);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1\', \'2\', \'3\'];\r\nreturn db.select(\'select * from magic_api_info where id in (#{ids})\')\r\n// var id = \'123\';\r\n// db.select(\"select * from magic_api_info where id = \'${id}\'\")\r\n// db.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")', '[{\"name\":\"message\",\"value\":\"Hello\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"ok\",\n    \"timestamp\": 1612145392126\n}', NULL, '', 1612145215453, 1612145418884);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1c4dab17be8641a19cfd37ebbe8bddda\', \r\n           \'210b3b49036d4348894a70e6fb29cb97\', \r\n           \'24004f976c6f48d4af65dfd2f416df6f\'];\r\nreturn db.select(\'select * from magic_api_info where id in (#{ids})\')\r\n// var id = \'123\';\r\n// db.select(\"select * from magic_api_info where id = \'${id}\'\")\r\n// db.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")', '[{\"name\":\"message\",\"value\":\"Hello\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [],\n    \"timestamp\": 1612145418928\n}', NULL, '', 1612145215453, 1612145551905);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1c4dab17be8641a19cfd37ebbe8bddda\', \r\n           \'210b3b49036d4348894a70e6fb29cb97\', \r\n           \'24004f976c6f48d4af65dfd2f416df6f\'];\r\n// return db.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'1c4dab17be8641a19cfd37ebbe8bddda\';\r\nreturn db.select(\"select * from magic_api_info where id = \'${id}\'\")\r\n// db.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")', '[{\"name\":\"name\",\"value\":\"调用其他接口\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"1c4dab17be8641a19cfd37ebbe8bddda\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"filter\",\n            \"api_script\": \"var list = [{\\r\\n    sex : 0,\\r\\n    name : \'小明\'\\r\\n},{\\r\\n    sex : 1,\\r\\n    name : \'小花\'\\r\\n}]\\r\\nreturn select * from list t where t.sex = 0\",\n            \"api_parameter\": \"[]\",\n            \"api_option\": \"[]\",\n            \"api_name\": \"使用Linq过滤\",\n            \"api_group_id\": \"88b03ba01ba348bbb1d40203fed80fbb\",\n            \"api_request_body\": \"\",\n            \"api_request_header\": \"[]\",\n            \"api_response_body\": \"{\\n    \\\"code\\\": 1,\\n    \\\"message\\\": \\\"success\\\",\\n    \\\"data\\\": [\\n        {\\n            \\\"sex\\\": 0,\\n            \\\"name\\\": \\\"小明\\\"\\n        }\\n    ],\\n    \\\"timestamp\\\": 1611916610305\\n}\",\n            \"api_response_header\": null,\n            \"api_description\": \"\",\n            \"api_create_time\": 1611916610265,\n            \"api_update_time\": 1611916614375\n        },\n        {\n            \"id\": \"210b3b49036d4348894a70e6fb29cb97\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"call\",\n            \"api_script\": \"import \'@get:/other/assert\' as test;\\r\\nvar id = \'1\';\\r\\nvar message = \'hello\'\\r\\nreturn test();\",\n            \"api_parameter\": \"[]\",\n            \"api_option\": \"[]\",\n            \"api_name\": \"调用其他接口\",\n            \"api_group_id\": \"88b03ba01ba348bbb1d40203fed80fbb\",\n            \"api_request_body\": \"\",\n            \"api_request_header\": \"[]\",\n            \"api_response_body\": \"{\\n    \\\"code\\\": 1,\\n    \\\"message\\\": \\\"success\\\",\\n    \\\"data\\\": \\\"ok\\\",\\n    \\\"timestamp\\\": 1611912681279\\n}\",\n            \"api_response_header\": null,\n            \"api_description\": \"\",\n            \"api_create_time\": 1611912221964,\n            \"api_update_time\": 1611914312248\n        },\n        {\n            \"id\": \"24004f976c6f48d4af65dfd2f416df6f\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"format\",\n            \"api_script\": \"var val = new Date();\\r\\nreturn {\'使用.format\': val.format(\'yyyy-MM-dd\'),\\r\\n        \'使用date_format\' : date_format(val)\\r\\n        }\",\n            \"api_parameter\": \"[]\",\n            \"api_option\": \"[]\",\n            \"api_name\": \"日期格式化\",\n            \"api_group_id\": \"4591af9bd7ff447398f3417554cfff15\",\n            \"api_request_body\": \"\",\n            \"api_request_header\": \"[]\",\n            \"api_response_body\": \"{\\n    \\\"code\\\": 1,\\n    \\\"message\\\": \\\"success\\\",\\n    \\\"data\\\": {\\n        \\\"使用.format\\\": \\\"2021-01-29\\\",\\n        \\\"使用date_format\\\": \\\"2021-01-29 15:13:50\\\"\\n    },\\n    \\\"timestamp\\\": 1611904430039\\n}\",\n            \"api_response_header\": null,\n            \"api_description\": \"\",\n            \"api_create_time\": 1611904429996,\n            \"api_update_time\": 1611904436774\n        }\n    ],\n    \"timestamp\": 1612145551938\n}', NULL, '', 1612145215453, 1612145622706);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1c4dab17be8641a19cfd37ebbe8bddda\', \r\n           \'210b3b49036d4348894a70e6fb29cb97\', \r\n           \'24004f976c6f48d4af65dfd2f416df6f\'];\r\n// return db.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'1c4dab17be8641a19cfd37ebbe8bddda\';\r\n// return db.select(\"select * from magic_api_info where id = \'${id}\'\")\r\nreturn db.select(\"select * from magic_api_info where id = \'123\' ?{name, and api_name = #{name}}\")', '[{\"name\":\"name\",\"value\":\"调用其他接口\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"id\": \"1c4dab17be8641a19cfd37ebbe8bddda\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"filter\",\n            \"api_script\": \"var list = [{\\r\\n    sex : 0,\\r\\n    name : \'小明\'\\r\\n},{\\r\\n    sex : 1,\\r\\n    name : \'小花\'\\r\\n}]\\r\\nreturn select * from list t where t.sex = 0\",\n            \"api_parameter\": \"[]\",\n            \"api_option\": \"[]\",\n            \"api_name\": \"使用Linq过滤\",\n            \"api_group_id\": \"88b03ba01ba348bbb1d40203fed80fbb\",\n            \"api_request_body\": \"\",\n            \"api_request_header\": \"[]\",\n            \"api_response_body\": \"{\\n    \\\"code\\\": 1,\\n    \\\"message\\\": \\\"success\\\",\\n    \\\"data\\\": [\\n        {\\n            \\\"sex\\\": 0,\\n            \\\"name\\\": \\\"小明\\\"\\n        }\\n    ],\\n    \\\"timestamp\\\": 1611916610305\\n}\",\n            \"api_response_header\": null,\n            \"api_description\": \"\",\n            \"api_create_time\": 1611916610265,\n            \"api_update_time\": 1611916614375\n        }\n    ],\n    \"timestamp\": 1612145622742\n}', NULL, '', 1612145215453, 1612145639481);
INSERT INTO `magic_api_info_his` VALUES ('8fe0fc324a8e429999efbbf0f2cc94ca', 'GET', 'expression', 'var ids = [\'1c4dab17be8641a19cfd37ebbe8bddda\', \r\n           \'210b3b49036d4348894a70e6fb29cb97\', \r\n           \'24004f976c6f48d4af65dfd2f416df6f\'];\r\n// return db.select(\'select * from magic_api_info where id in (#{ids})\')\r\nvar id = \'1c4dab17be8641a19cfd37ebbe8bddda\';\r\n// return db.select(\"select * from magic_api_info where id = \'${id}\'\")\r\nreturn db.select(\"select * from magic_api_info where id = \'210b3b49036d4348894a70e6fb29cb97\' ?{name, and api_name = #{name}}\")', '[{\"name\":\"name\",\"value\":\"调用其他接口\",\"description\":\"\"}]', '[]', '参数测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [],\n    \"timestamp\": 1612145639505\n}', NULL, '', 1612145215453, 1612145686794);
INSERT INTO `magic_api_info_his` VALUES ('2754a09c2da449469f2c092110374fd6', 'GET', 'page1', 'return db.page(\'select api_name from magic_api_info\');', '[]', '[]', '分页测试', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '', NULL, '', 1612146096468, 1612146096468);
INSERT INTO `magic_api_info_his` VALUES ('0af0ddb51ec94af088a728d38343a37c', 'GET', 'cache', 'return db.cache(\'test\').select(\'select api_name, api_method, api_path from magic_api_info\');', '[]', '[]', 'cache', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '', NULL, '', 1612146453108, 1612146453108);
INSERT INTO `magic_api_info_his` VALUES ('0af0ddb51ec94af088a728d38343a37c', 'GET', 'cache', '// return db.cache(\'test\').select(\'select api_name, api_method, api_path from magic_api_info\');\r\nreturn db.cache(\'test\');', '[]', '[]', 'cache', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"api_name\": \"cache\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"cache\"\n        },\n        {\n            \"api_name\": \"使用Linq过滤\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"filter\"\n        },\n        {\n            \"api_name\": \"调用其他接口\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"call\"\n        },\n        {\n            \"api_name\": \"日期格式化\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"format\"\n        },\n        {\n            \"api_name\": \"分页测试\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"page1\"\n        },\n        {\n            \"api_name\": \"手动关联\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"join\"\n        },\n        {\n            \"api_name\": \"使用Linq分组\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/group\"\n        },\n        {\n            \"api_name\": \"测试日志\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"log\"\n        },\n        {\n            \"api_name\": \"字段转换\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"map\"\n        },\n        {\n            \"api_name\": \"空值转换\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"null\"\n        },\n        {\n            \"api_name\": \"使用Linq转Tree\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"tree\"\n        },\n        {\n            \"api_name\": \"读取配置\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"config\"\n        },\n        {\n            \"api_name\": \"参数测试\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"expression\"\n        },\n        {\n            \"api_name\": \"动态行转列\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/pivot\"\n        },\n        {\n            \"api_name\": \"list转tree\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/tree\"\n        },\n        {\n            \"api_name\": \"根据零件代码获取唯一零件\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"get_component_by_code\"\n        },\n        {\n            \"api_name\": \"查询特定材料类型代码列表\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"get_stuff_code_list_by_type\"\n        },\n        {\n            \"api_name\": \"参数验证\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"assert\"\n        },\n        {\n            \"api_name\": \"使用Linq动态行转列\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"pivot\"\n        },\n        {\n            \"api_name\": \"List过滤\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/filter\"\n        },\n        {\n            \"api_name\": \"使用Linq关联\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"join\"\n        },\n        {\n            \"api_name\": \"自定义函数调用\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"custom\"\n        },\n        {\n            \"api_name\": \"过滤和转换\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/filter-map\"\n        },\n        {\n            \"api_name\": \"调用函数\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"func\"\n        },\n        {\n            \"api_name\": \"简单分组\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"/group\"\n        },\n        {\n            \"api_name\": \"异步执行\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"async\"\n        },\n        {\n            \"api_name\": \"调用函数列表\",\n            \"api_method\": \"GET\",\n            \"api_path\": \"invoke_func\"\n        }\n    ],\n    \"timestamp\": 1612146453140\n}', NULL, '', 1612146453108, 1612146487510);
INSERT INTO `magic_api_info_his` VALUES ('6fff481f17e541fda75ddce30b20322f', 'GET', 'column', 'var sql = \"\"\"select api_name from magic_api_info limit 1\"\"\";\r\nreturn {\'default\':db.selectOne(sql), \r\n        \'camel\':db.name().selectOne(sql),\r\n        \'pascel\':db.pascal().selectOne(sql),\r\n        \'upper\':db.upper().selectOne(sql),\r\n        \'lower\':db.lower().selectOne(sql),\r\n        \'custom\':db.columnCase(\'camel\').selectOne(sql) }', '[]', '[]', '列名转换', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '', NULL, '', 1612149219846, 1612149219846);
INSERT INTO `magic_api_info_his` VALUES ('6fff481f17e541fda75ddce30b20322f', 'GET', 'column', 'var sql = \"\"\"select api_name from magic_api_info limit 1\"\"\";\r\nreturn {\'default\':db.selectOne(sql), \r\n        \'camel\':db.camel().selectOne(sql),\r\n        \'pascel\':db.pascal().selectOne(sql),\r\n        \'upper\':db.upper().selectOne(sql),\r\n        \'lower\':db.lower().selectOne(sql),\r\n        \'custom\':db.columnCase(\'camel\').selectOne(sql) }', '[]', '[]', '列名转换', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '{\n    \"code\": -1000,\n    \"message\": \"在\'org.ssssssss.magicapi.modules.SQLModule\'中找不到方法 name()\",\n    \"data\": null,\n    \"timestamp\": 1612149219878\n}', NULL, '', 1612149219846, 1612149231941);
INSERT INTO `magic_api_info_his` VALUES ('c91a959441b44f5ab610ed38db2c994f', 'GET', 'transaction', '// 自动事务\r\nvar val = db.transaction(()=>{\r\n    return db.update(\"\"\"delete from  magic_api_info where id = \'999\'\"\"\")\r\n});\r\nreturn val;', '[]', '[]', '事务', 'd9a43b45d38346749441225b4e2f341a', '', '[]', '', NULL, '', 1612149407912, 1612149407912);
INSERT INTO `magic_api_info_his` VALUES ('a733f552a79a445d8226cd1bfa399e27', 'GET', 'image', 'import \'java.awt.image.BufferedImage\' as BufferedImage;\r\nimport \'java.awt.Color\' as Color;\r\nimport \'java.awt.Font\' as Font;\r\nimport \'java.io.ByteArrayOutputStream\' as ByteArrayOutputStream;\r\nimport \'java.util.Random\' as Random;\r\nimport \'javax.imageio.ImageIO\' as ImageIO;\r\nimport response;\r\nimport log;\r\n\r\nvar width = 200;\r\nvar height = 69;\r\nvar image = new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);\r\nvar graphics = image.getGraphics();\r\ngraphics.setColor(Color.WHITE);\r\ngraphics.fillRect(0,0,width,height);\r\ngraphics.setFont(new Font(\"微软雅黑\", Font.BOLD, 40));\r\nvar letter = \'123456789abcdefghijklmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\';\r\nvar random = new Random();\r\nvar randomColor = ()=>new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));\r\nvar x = 10;\r\nvar code = \'\';\r\nfor (i in range(0, 3)){ //验证码\r\n    graphics.setColor(randomColor());\r\n    var degree = random.nextInt() % 30;\r\n    var ch = letter.charAt(random.nextInt(letter.length()));\r\n    code = code + ch;\r\n    graphics.rotate(degree * 3.1415926535 / 180, x, 45);\r\n    graphics.drawString(ch + \'\', x, 45);\r\n    graphics.rotate(-degree * 3.1415926535 / 180, x, 45);\r\n    x = x + 48;\r\n}\r\nlog.info(\'生成的验证码:{}\',code)\r\nfor (i in range(0, 6)) {    //干扰线\r\n    graphics.setColor(randomColor());\r\n    graphics.drawLine(random.nextInt(width), random.nextInt(height),random.nextInt(width), random.nextInt(height));\r\n}\r\n\r\nfor(i in range(0, 30)){  //噪点\r\n    graphics.setColor(randomColor());\r\n    graphics.fillRect(random.nextInt(width), random.nextInt(height), 2,2);\r\n\r\n}\r\ngraphics.dispose();\r\nvar baos = new ByteArrayOutputStream();\r\nImageIO.write(image,\"png\",baos);\r\nbaos.flush();\r\nbaos.close();\r\nreturn response.image(baos.toByteArray(),\'image/png\');\r\n', '[]', '[]', '生成验证码', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612150683918, 1612150683918);
INSERT INTO `magic_api_info_his` VALUES ('a733f552a79a445d8226cd1bfa399e27', 'GET', 'image', 'import \'java.awt.image.BufferedImage\' as BufferedImage;\r\nimport \'java.awt.Color\' as Color;\r\nimport \'java.awt.Font\' as Font;\r\nimport \'java.io.ByteArrayOutputStream\' as ByteArrayOutputStream;\r\nimport \'java.util.Random\' as Random;\r\nimport \'javax.imageio.ImageIO\' as ImageIO;\r\nimport response;\r\nimport log;\r\n\r\nvar width = 200;\r\nvar height = 69;\r\nvar image = new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);\r\nvar graphics = image.getGraphics();\r\ngraphics.setColor(Color.WHITE);\r\ngraphics.fillRect(0,0,width,height);\r\ngraphics.setFont(new Font(\"微软雅黑\", Font.BOLD, 40));\r\nvar letter = \'123456789abcdefghijklmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\';\r\nvar random = new Random();\r\nvar randomColor = ()=>new Color(random.nextInt(256), random.nextInt(256), random.nextInt(256));\r\nvar x = 10;\r\nvar code = \'\';\r\nfor (i in range(0, 3)){ //验证码\r\n    graphics.setColor(randomColor());\r\n    var degree = random.nextInt() % 30;\r\n    var ch = letter.charAt(random.nextInt(letter.length()));\r\n    code = code + ch;\r\n    graphics.rotate(degree * 3.1415926535 / 180, x, 45);\r\n    graphics.drawString(ch + \'\', x, 45);\r\n    graphics.rotate(-degree * 3.1415926535 / 180, x, 45);\r\n    x = x + 48;\r\n}\r\nlog.info(\'生成的验证码:{}\',code)\r\nfor (i in range(0, 6)) {    //干扰线\r\n    graphics.setColor(randomColor());\r\n    graphics.drawLine(random.nextInt(width), random.nextInt(height),random.nextInt(width), random.nextInt(height));\r\n}\r\n\r\nfor(i in range(0, 30)){  //噪点\r\n    graphics.setColor(randomColor());\r\n    graphics.fillRect(random.nextInt(width), random.nextInt(height), 2,2);\r\n\r\n}\r\ngraphics.dispose();\r\nvar baos = new ByteArrayOutputStream();\r\nImageIO.write(image,\"png\",baos);\r\nbaos.flush();\r\nbaos.close();\r\nreturn response.image(baos.toByteArray(),\'image/png\');\r\n', '[]', '[]', '生成验证码', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', 'iVBORw0KGgoAAAANSUhEUgAAAMgAAABFCAIAAACAFD7PAAAElUlEQVR42u3bv2sVQRAH8AMrQS0k9lEhiBYWxiZgqWUaExT/A0MKI+EpIphCEIIPsRFSqWCRRpQUSSOxSBBBi4AgFuIPELURLIJoEZ4DB+t5d7tvf8zuzu7N8K3k5QXCx5nZffeKAReXhyr4T8DFsLgYFlfKtf3kF4RhcREixbBo1eszlyBxPaGQYlgMC98TRVh3nj6HsDDiI6/3YxliCau4Og1hWLl6cmlR6cHiSmIr5x2Ly+8WlRisb3PHIQwiuRbFsLhF8SjkSs0Tw+KRx7ASrJmRLxCCLWp9dL8sDCsBUl5hWbcohaquwHo8eyJpUj5sOW5RalUd6lgutk6Ob4iY/uyN3T1StlC28qGqkoH1e/MWxN2WHa8qLAtk1rZwYSFu5ZnAKlWJhG9dMliavKI3LdyDng6jJGG58zKypValyYtI0/IB60pvApLkdQOuKtOxqAlLbUsGS8cKNVuZwEJvV+4bPYotIyjRYVVHnu91SgVr8ucjCNl2hXJadBmIpk3Id9P6vPQWQmpbx4F16s8zSBRY6KdFzaZlCoU+LK/CLEehDJbpHHy1fhYSdywm2rTc7xeMYH3a2YJE27FM25ULLKybCP3jYSxb17/3IQzL7xx8v/AAYm3L5VorIVhGyKifCr2eB2Ww3G8idH5QZmtqZhZC/OpBADq2thT6VJhKuxo6FhVWUD7kaYWysbYKaRXGsNJoV0Nt6d+Omn5ErbBVwnq5uAOp9bBWWDJb8ytTkAxU5QZLjEVcVV9nDkGGblolrPI1JS+IDqzSEzqpbGGFVyXE6NjSf9sSlsUWL5awVmFePdVgCVWJwSLSrqpuFLZcfoW+rdq/C15hPGULaxC1hK0qL5R3VsNSDL4Sk2hgITf3qiqGhckLq11Z2JL1J5mwe3cPQBiWrzm4dW0fBIsXri0dWMLT0MuFmjB0WDVVacNyf09EWE1b/ppW1ZPplZWnKUkdlowLkbXddOXCtdX05HIRiissAVhNMdFVaRJpnhZRYFX3Jx936+7CmqpowWrSaSUVGJb+aKtdNzh+aVF4cvnORRhhsdqVJSwjVfObFyG+b63UvJpXWRaPCrae74LZshAWsV1lBUvGS/EyHVvq+8zAsIyEUYflospT7SouQ0w/b27FJ7Olfz9ubevh6m0IirBWVYNIX6NA7lgh/78iwhr8/ziXxectcWHJGlgasNS8KFwlOD4nA5LAlvXndzVbL6aXIc2XnT46BqG55seEFbEW+osQd16tw054cjktVm1FhCXaVXRhBX1PalL6vKyHndeBSPaqIk9YRp6sLws6YiuKsIKgJ0RSIR9+Ig4rsLB/sDb3zEHOT9yHsKe8bQUQFhkWBU8j/ZuQbtryJwxnFB7Z/giJ1aIc+xPDqglLDxYpTzwQvTawQMt7FzxlAwtFmEdYY+MfIFik6HvK0pa1MC+wSkwlrE55yr70hRU+SOXdn8692wthYWpeBaInd1JJ9KfUYR18cwHi+7cU7KlrRRoWe+LChIXSotgTw/Iy8viPzrDwH1/h6jQs9McNuLoOiz0Fq8OToxBe3rkYFsPiil1/ARUv7K6oHzaqAAAAAElFTkSuQmCC', NULL, '', 1612150683918, 1612150689683);
INSERT INTO `magic_api_info_his` VALUES ('dbff8dfb0b414c52a6f6048893a2654a', 'GET', 'download', 'return response.download(\'中文测试\', \'str.txt\');', '[]', '[]', '文件下载', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612150801600, 1612150801600);
INSERT INTO `magic_api_info_his` VALUES ('f8869c553e51420688015a2344c37386', 'GET', 'page', 'var total = 5;\r\nvar list = [1,2];\r\nreturn response.page(total, list);', '[]', '[]', '自定义分页', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612150902579, 1612150902579);
INSERT INTO `magic_api_info_his` VALUES ('f8869c553e51420688015a2344c37386', 'GET', 'page', 'var total = 5;\r\nvar list = [1,2];\r\nreturn response.page(total, list);', '[]', '[]', '自定义分页', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612150902579, 1612150922579);
INSERT INTO `magic_api_info_his` VALUES ('fa5c93870ad744cdbb959d18930a4b91', 'GET', 'exit', 'if(true){exit 400, \'参数填写有误\'}\r\nexit 200, \'success\', \'ok\'', '[]', '[]', 'exit', 'a8a1519f8e784f1994e9a86611181dd7', '', '[]', '', NULL, '', 1612151009926, 1612151009926);
INSERT INTO `magic_api_info_his` VALUES ('c6009c967c394c19a760900b757c4671', 'GET', 'binary', '/*\r\n    各种操作符测试\r\n*/\r\nimport log;\r\nvar a = 1;\r\nvar b = 2;\r\nlog.info(\"a = \" + a + \", b = \" + b);\r\nvar c = a + b;\r\nlog.info(\"a + b = \" + c);\r\nc = a - b;\r\nlog.info(\"a - b = \" + c);\r\nc = a * b;\r\nlog.info(\"a * b = \" + c);\r\nc = a / b;\r\nlog.info(\"a / b = \" + c);\r\nc = a % b;\r\nlog.info(\"a % b = \" + c);\r\nc = a > b;\r\nlog.info(\"a > b = \" + c);\r\nc = a >= b;\r\nlog.info(\"a >= b = \" + c);\r\nc = a == b;\r\nlog.info(\"a == b = \" + c);\r\nc = a < b;\r\nlog.info(\"a < b = \" + c);\r\nc = a <= b;\r\nlog.info(\"a <= b = \" + c);\r\nc = a != b;\r\nlog.info(\"a != b = \" + c);', '[]', '[]', '操作符', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612151656312, 1612151656312);
INSERT INTO `magic_api_info_his` VALUES ('5e7269d17e0b4f50b41223b81079ba8f', 'GET', 'var', 'var int = 1;\r\nvar double = 2.0d;\r\nvar long = 3L;\r\nvar float = 4f;\r\nvar byte = 5b;\r\nvar short = 6s;\r\nvar boolean = true;\r\nvar nullValue = null;\r\nvar list = [1, 2, 3, 4, 5];\r\nvar map = {k1:123, k2:\"456\", k3:789L, k4:{k5:\'...\'}};\r\nvar string1 = \"str\";\r\nvar string2 = \"str2\";\r\nvar string3 = \"\"\" select * from table t1 join table2 t1 join table2 t2 on t2.xxx = t1.xxx where t1.id in (1,2,3,4,5,6)\"\"\"\r\nvar lambda = e => e + 1;', '[]', '[]', '定义变量', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612152177344, 1612152177344);
INSERT INTO `magic_api_info_his` VALUES ('e9797599fc0d490bb9e1d41f3ffd3e70', 'GET', 'java', 'return df.format(now);', '[]', '[]', '与java交互', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612152275598, 1612152275598);
INSERT INTO `magic_api_info_his` VALUES ('6e3fec4be12f4fb1abfa3eef437441ca', 'GET', 'lambda', '/*\r\n    测试Lambda\r\n*/\r\nvar lambda1 = e => e + 1; //单参数单行代码，省略括号,省略{}\r\nvar lambda2 = (e) => e +1; //单参数单行代码，不省略括号，省略{} 作用同上\r\nvar lambda4 = e => {e + 1};//单参数无返回值，不能省略{}\r\nvar lambda5 = e => {return e + 1};//单参数有返回值，省略括号,不省略{}\r\nvar lambda6 = (e) => {return e + 1};//单参数有返回值，不省略括号,不省略{}，作用同上\r\nvar lambda7 = (a,b) => a + b; //多参数单行代码，省略{}\r\nvar lambda7 = (a,b) => {return a + b}; //多参数单行代码，有返回值，作用同上\r\nvar lambda8 = (a,b) =>{ //多参数多行代码， 无法省略括号和{}\r\n    a = a + 1;\r\n    return a + b;\r\n}\r\nvar v1 = lambda1(1);    //返回2\r\nvar v2 = lambda2(v1);    //返回3\r\nreturn lambda8(v1,lambda7(v1,v2)); //返回8\r\n', '[]', '[]', '定义lambda', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612156726040, 1612156726040);
INSERT INTO `magic_api_info_his` VALUES ('6e3fec4be12f4fb1abfa3eef437441ca', 'GET', 'lambda', '/*\r\n    测试Lambda\r\n*/\r\nvar lambda1 = e => e + 1; //单参数单行代码，省略括号,省略{}\r\nvar lambda2 = (e) => e +1; //单参数单行代码，不省略括号，省略{} 作用同上\r\nvar lambda4 = e => {e + 1};//单参数无返回值，不能省略{}\r\nvar lambda5 = e => {return e + 1};//单参数有返回值，省略括号,不省略{}\r\nvar lambda6 = (e) => {return e + 1};//单参数有返回值，不省略括号,不省略{}，作用同上\r\nvar lambda7 = (a,b) => a + b; //多参数单行代码，省略{}\r\nvar lambda7 = (a,b) => {return a + b}; //多参数单行代码，有返回值，作用同上\r\nvar lambda8 = (a,b) =>{ //多参数多行代码， 无法省略括号和{}\r\n    a = a + 1;\r\n    return a + b;\r\n}\r\nvar v1 = lambda1(1);    //返回2\r\nvar v2 = lambda2(v1);    //返回3\r\nreturn lambda8(v1,lambda7(v1,v2)); //返回8\r\n', '[]', '[]', '定义lambda', '079c220a28314594b12cd9e2e5426c73', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 8,\n    \"timestamp\": 1612156726072\n}', NULL, '', 1612156726040, 1612156794057);
INSERT INTO `magic_api_info_his` VALUES ('e9797599fc0d490bb9e1d41f3ffd3e70', 'GET', 'java', 'import \'java.util.Date\' as Date;\r\nimport \'java.text.SimpleDateFormat\' as SimpleDateFormat;\r\nvar now = new Date();\r\nvar df = new SimpleDateFormat(\'yyyy-MM-dd\');\r\nreturn df.format(now);', '[]', '[]', '与java交互', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612152275598, 1612157064012);
INSERT INTO `magic_api_info_his` VALUES ('b05e101f2f8142b194c183e5f922c566', 'POST', 'if', 'if(a == 1){\r\n    return 1;\r\n}else if(a == 2){\r\n    return 2;\r\n}else{\r\n    return 0;\r\n}\r\n\r\n/*\r\n对于条件判断，特意支持了简写的方式\r\n如 可以直接写 \r\n1、if(a) \r\n2、else if(a)\r\n3、while(a) \r\n4、a ? 1 : 0 \r\n\r\n当a的值是以下情况时为false\r\nnull\r\n空集合\r\n空Map\r\n数值 == 0\r\n空字符串（length == 0）\r\nfalse\r\n其它情况一律视为true\r\n*/', '[]', '[]', 'if', '079c220a28314594b12cd9e2e5426c73', '', '[]', '', NULL, '', 1612157195050, 1612157195050);
INSERT INTO `magic_api_info_his` VALUES ('8dcf49540f194c0e91f09f738d49696a', 'GET', 'optional', 'var map = {\r\n    a : {b:\'ok\'},\r\n    c : 1\r\n}\r\nreturn map.a.bbbb?.c + \'-\' + map.a?.b;', '[]', '[]', '可选链', 'ae60cd38a8b24608bbad75d26c9ed09c', '', '[]', '', NULL, '', 1612157401931, 1612157401931);
INSERT INTO `magic_api_info_his` VALUES ('8dcf49540f194c0e91f09f738d49696a', 'GET', 'optional', 'var map = {\r\n    a : {b:\'ok\'},\r\n    c : 1\r\n}\r\nreturn map.a.bbbb?.c + \'-\' + map.a?.b;', '[]', '[]', '可选链', 'ae60cd38a8b24608bbad75d26c9ed09c', '', '[]', '', NULL, '', 1612157401931, 1612157402300);
INSERT INTO `magic_api_info_his` VALUES ('c4666f43fce142bc9f3c5bf7d56eafde', 'GET', 'spread', 'var map = {a:1, b:2}\r\nvar list = [1, 2, 3, 4, 5]\r\nreturn {...map, c:3, d:[...list]};', '[]', '[]', '扩展运算符', 'ae60cd38a8b24608bbad75d26c9ed09c', '', '[]', '', NULL, '', 1612157585506, 1612157585506);
INSERT INTO `magic_api_info_his` VALUES ('c2dd8d1b46b147caaee1034a6bd61fc1', 'GET', 'try', 'try{\r\n    var c = 1 / 0\r\n}catch(e){\r\n    return e.getMessage();\r\n}finally{\r\n    return \'finally\'\r\n}\r\nreturn \'ok\';', '[]', '[]', 'try-catch', 'ae60cd38a8b24608bbad75d26c9ed09c', '', '[]', '', NULL, '', 1612157699045, 1612157699045);
INSERT INTO `magic_api_info_his` VALUES ('886405f33b7a4dbba32cce2fba453735', 'GET', 'list', 'var list = [1, 2, 3, 4, 5];\r\nvar sum = 0;\r\nfor(val in list){\r\n    sum = sum + val;\r\n}\r\nreturn sum;', '[]', '[]', '循环List', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612157852522, 1612157852522);
INSERT INTO `magic_api_info_his` VALUES ('26f74c844c624156945ea9c8498b3cba', 'GET', 'map', 'var map = {key1 : 1, key2 : 2, key3 : 3};\r\nvar sum = 0;\r\nvar keys = \'\';\r\nfor(key, value in map){\r\n    sum = sum + value;\r\n    keys = keys + key;\r\n}\r\nreturn keys + \'-\' + sum;', '[]', '[]', '循环Map', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612158116483, 1612158116483);
INSERT INTO `magic_api_info_his` VALUES ('26f74c844c624156945ea9c8498b3cba', 'GET', 'map', 'var map = {key1 : 1, key2 : 2, key3 : 3};\r\nvar sum = 0;\r\nvar keys = \'\';\r\nfor(key, value in map){\r\n    sum = sum + value;\r\n    keys = keys + key;\r\n}\r\nreturn keys + \'-\' + sum;', '[]', '[]', '循环Map', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"key1key2key3-6\",\n    \"timestamp\": 1612158116511\n}', NULL, '', 1612158116483, 1612158117106);
INSERT INTO `magic_api_info_his` VALUES ('b335b53182df4b1391d3c66de00e0cab', 'GET', 'test/for', 'var sum  = 0;\r\nfor(val in range(0, 100)){\r\n    if(val > 90){break;}\r\n    if(val % 3 == 0){continue;}\r\n    sum = sum + val;\r\n}\r\nreturn sum;', '[]', '[]', 'for循环', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612158386639, 1612158386639);
INSERT INTO `magic_api_info_his` VALUES ('b335b53182df4b1391d3c66de00e0cab', 'GET', 'test/for', 'var sum  = 0;\r\nfor(val in range(0, 100)){\r\n    if(val > 90){break;}\r\n    if(val % 3 == 0){continue;}\r\n    sum = sum + val;\r\n}\r\nreturn val;', '[]', '[]', 'for循环', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 2700,\n    \"timestamp\": 1612158386672\n}', NULL, '', 1612158386639, 1612158523234);
INSERT INTO `magic_api_info_his` VALUES ('b335b53182df4b1391d3c66de00e0cab', 'GET', 'test/for', 'var sum  = 0;\r\nfor(val in range(0, 100)){\r\n    if(val > 90){break;}\r\n    if(val % 3 == 0){continue;}\r\n    sum = sum + val;\r\n}\r\nreturn sum;', '[]', '[]', 'for循环', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1612158523266\n}', NULL, '', 1612158386639, 1612158533317);
INSERT INTO `magic_api_info_his` VALUES ('b335b53182df4b1391d3c66de00e0cab', 'GET', 'test/for', 'var sum  = 0;\r\nfor(val in range(0, 100)){\r\n    if(val > 90){break;}\r\n    if(val % 3 == 0){continue;}\r\n    sum = sum + val;\r\n}\r\nreturn sum;', '[]', '[]', 'for循环', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 2700,\n    \"timestamp\": 1612158533348\n}', NULL, '', 1612158386639, 1612158534914);
INSERT INTO `magic_api_info_his` VALUES ('5e52b28f5dbb4e7f8888a04c01d9da6d', 'GET', 'lambda/list', 'var list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nvar sum = 0;\r\nlist.each(it => sum += it + 1)\r\nreturn sum', '[]', '[]', 'lambda循环list', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612158709693, 1612158709693);
INSERT INTO `magic_api_info_his` VALUES ('5e52b28f5dbb4e7f8888a04c01d9da6d', 'GET', 'lambda/list', 'var list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nvar sum = 0;\r\nlist.each(it => sum += it + 1)\r\nreturn sum', '[]', '[]', 'lambda循环list', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612158709693, 1612158710078);
INSERT INTO `magic_api_info_his` VALUES ('5e52b28f5dbb4e7f8888a04c01d9da6d', 'GET', 'lambda/list', 'var list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nvar sum = 0;\r\nlist.each(it => sum += it + 1)\r\nreturn sum', '[]', '[]', 'lambda循环list', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 65,\n    \"timestamp\": 1612158710103\n}', NULL, '', 1612158709693, 1612158740825);
INSERT INTO `magic_api_info_his` VALUES ('5e52b28f5dbb4e7f8888a04c01d9da6d', 'GET', 'lambda/list', 'var list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\nvar sum = 0;\r\nlist.each(it => sum += it + 1)\r\nreturn sum', '[]', '[]', 'lambda循环list', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": 65,\n    \"timestamp\": 1612158740844\n}', NULL, '', 1612158709693, 1612159010329);
INSERT INTO `magic_api_info_his` VALUES ('87b8e49694e544b3bbf09bf7823537e2', 'GET', 'lambda/map', 'var map = {\r\n    key1 : 1,\r\n    key2 : 2,\r\n    key3 : 3\r\n};\r\nvar sum = 0;\r\nvar keys = \'\';\r\nmap.each((key, value) => {\r\n    keys += key;\r\n    sum += value;\r\n})', '[]', '[]', 'lambda循环map', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612159145540, 1612159145540);
INSERT INTO `magic_api_info_his` VALUES ('87b8e49694e544b3bbf09bf7823537e2', 'GET', 'lambda/map', 'var map = {\r\n    key1 : 1,\r\n    key2 : 2,\r\n    key3 : 3\r\n};\r\nvar sum = 0;\r\nvar keys = \'\';\r\nmap.each((key, value) => {\r\n    keys += key;\r\n    sum += value;\r\n})\r\n\r\nreturn keys + \'-\' + sum; ', '[]', '[]', 'lambda循环map', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1612159145576\n}', NULL, '', 1612159145540, 1612159170690);
INSERT INTO `magic_api_info_his` VALUES ('87b8e49694e544b3bbf09bf7823537e2', 'GET', 'lambda/map', 'var map = {\r\n    key1 : 1,\r\n    key2 : 2,\r\n    key3 : 3\r\n};\r\nvar sum = 0;\r\nvar keys = \'\';\r\nmap.each((key, value) => {\r\n    keys += key;\r\n    sum += value;\r\n})\r\n\r\nreturn keys + \'-\' + sum; ', '[]', '[]', 'lambda循环map', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": \"key1key2key3-6\",\n    \"timestamp\": 1612159170711\n}', NULL, '', 1612159145540, 1612159189333);
INSERT INTO `magic_api_info_his` VALUES ('2c350ca1357742b7b7bbef1cfb4ca295', 'GET', 'while', 'var index = 0;\r\nvar sum = 0;\r\nwhile(index < 100){\r\n    sum += index++;\r\n}\r\nreturn sum;', '[]', '[]', 'while', 'd97d145633d04d05830e986c64bc2a10', '', '[]', '', NULL, '', 1612170474445, 1612170474445);
INSERT INTO `magic_api_info_his` VALUES ('de9c0f4e71df462c9fa6b346439a3e02', 'GET', 'module', 'import customModule;\r\ncustomModule.println(\"magic demo\")', '[]', '[]', '调用Java模块', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '', NULL, '', 1612232421891, 1612232421891);
INSERT INTO `magic_api_info_his` VALUES ('de9c0f4e71df462c9fa6b346439a3e02', 'GET', 'module', 'import customModule;\r\nreturn customModule.println(\"magic demo\")', '[]', '[]', '调用Java模块', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1612232421983\n}', NULL, '', 1612232421891, 1612232431967);
INSERT INTO `magic_api_info_his` VALUES ('de9c0f4e71df462c9fa6b346439a3e02', 'GET', 'module', 'import customModule;\r\nreturn customModule.println(\"magic demo\")', '[]', '[]', '调用Java模块', 'cf0d1a9ad00d45299b27830831db9a5a', '', '[]', '{\n    \"code\": 1,\n    \"message\": \"success\",\n    \"data\": null,\n    \"timestamp\": 1612232431997\n}', NULL, '', 1612232421891, 1612232492501);

-- ----------------------------
-- Table structure for magic_function
-- ----------------------------
DROP TABLE IF EXISTS `magic_function`;
CREATE TABLE `magic_function`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '主键',
  `function_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '函数名称',
  `function_path` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '函数路径',
  `function_parameter` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '参数列表',
  `function_return_type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '返回值类型',
  `function_script` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '脚本',
  `function_group_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '所属分组',
  `function_description` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '函数描述',
  `function_create_time` bigint NULL DEFAULT NULL COMMENT '创建时间',
  `function_update_time` bigint NULL DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = 'MagicAPI 函数表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of magic_function
-- ----------------------------
INSERT INTO `magic_function` VALUES ('3d00356508bc429da3e2f56d42eff13e', '相加', 'add', '[{\"name\":\"a\",\"type\":\"java.lang.Object\",\"description\":\"\"},{\"name\":\"b\",\"type\":\"java.lang.Object\",\"description\":\"\"}]', NULL, 'return a + b;', '6671dfa08b674e7194e4df1aeb3fe57d', '', 1611911435920, 1611911435920);
INSERT INTO `magic_function` VALUES ('859fb174eaae48f48e2002bac3cc9c53', '函数嵌套', 'nested', '[]', NULL, 'import \'@/testdemo/add\' as add;\r\nreturn add(1,2);', '6671dfa08b674e7194e4df1aeb3fe57d', '', 1611911308543, 1611911308543);
INSERT INTO `magic_function` VALUES ('91aa162778ac4f94b03d1f0f44311e45', '数值比较操作', 'compare', '[{\"name\":\"a\",\"type\":\"java.lang.Number\",\"description\":\"\"},{\"name\":\"b\",\"type\":\"java.lang.Number\",\"description\":\"\"}]', NULL, 'if(a > b) {return a - b;}\r\nelse{return a + b;}', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611892082688, 1611892082688);
INSERT INTO `magic_function` VALUES ('c04bd7ad9c914565af6ba33379c7de6c', '函数调用', 'invoker', '[{\"name\":\"a\",\"type\":\"java.lang.Number\",\"description\":\"\"},{\"name\":\"b\",\"type\":\"java.lang.Number\",\"description\":\"\"}]', '', 'import \'@/func/compare\' as compare;\r\nreturn compare(a, b); ', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611891852257, 1611897625259);

-- ----------------------------
-- Table structure for magic_function_his
-- ----------------------------
DROP TABLE IF EXISTS `magic_function_his`;
CREATE TABLE `magic_function_his`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT 'function_id',
  `function_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '函数名称',
  `function_path` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '函数路径',
  `function_parameter` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '参数列表',
  `function_return_type` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '返回值类型',
  `function_script` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '脚本',
  `function_group_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '所属分组',
  `function_description` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '函数描述',
  `function_create_time` bigint NULL DEFAULT NULL COMMENT '创建时间',
  `function_update_time` bigint NULL DEFAULT NULL COMMENT '修改时间'
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = 'MagicAPI 函数历史记录' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of magic_function_his
-- ----------------------------
INSERT INTO `magic_function_his` VALUES ('c04bd7ad9c914565af6ba33379c7de6c', '函数调用', 'invoker', '[]', NULL, 'import \'@/func/compare\' as compare;\r\nreturn compare(100, 1); ', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611891852257, 1611891852257);
INSERT INTO `magic_function_his` VALUES ('91aa162778ac4f94b03d1f0f44311e45', '数值比较操作', 'compare', '[{\"name\":\"a\",\"type\":\"java.lang.Number\",\"description\":\"\"},{\"name\":\"b\",\"type\":\"java.lang.Number\",\"description\":\"\"}]', NULL, 'if(a > b) {return a - b;}\r\nelse{return a + b;}', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611892082688, 1611892082688);
INSERT INTO `magic_function_his` VALUES ('c04bd7ad9c914565af6ba33379c7de6c', '函数调用', 'invoker', '[]', '', 'import \'@/func/compare\' as compare;\r\nreturn compare(100, 1); ', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611891852257, 1611892084814);
INSERT INTO `magic_function_his` VALUES ('c04bd7ad9c914565af6ba33379c7de6c', '函数调用', 'invoker', '[]', '', 'import \'@/func/compare\' as compare;\r\nreturn compare(100, 1); ', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611891852257, 1611896898290);
INSERT INTO `magic_function_his` VALUES ('c04bd7ad9c914565af6ba33379c7de6c', '函数调用', 'invoker', '[]', '', 'import \'@/func/compare\' as compare;\r\nreturn compare(100, 1); ', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611891852257, 1611897150874);
INSERT INTO `magic_function_his` VALUES ('c04bd7ad9c914565af6ba33379c7de6c', '函数调用', 'invoker', '[{\"name\":\"a\",\"type\":\"java.lang.Number\",\"description\":\"\"},{\"name\":\"b\",\"type\":\"java.lang.Number\",\"description\":\"\"}]', '', 'import \'@/func/compare\' as compare;\r\nreturn compare(100, 1); ', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611891852257, 1611897617680);
INSERT INTO `magic_function_his` VALUES ('c04bd7ad9c914565af6ba33379c7de6c', '函数调用', 'invoker', '[{\"name\":\"a\",\"type\":\"java.lang.Number\",\"description\":\"\"},{\"name\":\"b\",\"type\":\"java.lang.Number\",\"description\":\"\"}]', '', 'import \'@/func/compare\' as compare;\r\nreturn compare(a, b); ', '82e1a4c8a19b4f30a1c24892434e8e87', '', 1611891852257, 1611897625259);
INSERT INTO `magic_function_his` VALUES ('859fb174eaae48f48e2002bac3cc9c53', '函数嵌套', 'nested', '[]', NULL, 'import \'@/testdemo/add\' as add;\r\nreturn add(1,2);', '6671dfa08b674e7194e4df1aeb3fe57d', '', 1611911308543, 1611911308543);
INSERT INTO `magic_function_his` VALUES ('3d00356508bc429da3e2f56d42eff13e', '相加', 'add', '[{\"name\":\"a\",\"type\":\"java.lang.Object\",\"description\":\"\"},{\"name\":\"b\",\"type\":\"java.lang.Object\",\"description\":\"\"}]', NULL, 'return a + b;', '6671dfa08b674e7194e4df1aeb3fe57d', '', 1611911435920, 1611911435920);

-- ----------------------------
-- Table structure for magic_group
-- ----------------------------
DROP TABLE IF EXISTS `magic_group`;
CREATE TABLE `magic_group`  (
  `id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `group_name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '组名',
  `group_type` varchar(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '组类型，1：接口分组，2：函数分组',
  `group_path` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '分组路径',
  `parent_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '父级ID',
  `deleted` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT '0' COMMENT '是否被删除，1：是，0：否',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = 'MagicAPI分组信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of magic_group
-- ----------------------------
INSERT INTO `magic_group` VALUES ('079c220a28314594b12cd9e2e5426c73', '基本语法', '1', 'base', 'd91d60e6333442e992bbc10a70d612b8', '0');
INSERT INTO `magic_group` VALUES ('3a7413109fda430da4f5e76dddaa5c6f', 'demo3其他测试', '1', 'other', '0', '0');
INSERT INTO `magic_group` VALUES ('4591af9bd7ff447398f3417554cfff15', 'demo1结果转换', '1', 'convert', '0', '0');
INSERT INTO `magic_group` VALUES ('6671dfa08b674e7194e4df1aeb3fe57d', '测试函数', '2', 'testdemo', '0', '0');
INSERT INTO `magic_group` VALUES ('82e1a4c8a19b4f30a1c24892434e8e87', '函数测试', '2', 'func', '0', '0');
INSERT INTO `magic_group` VALUES ('88b03ba01ba348bbb1d40203fed80fbb', 'demo2Linq转换', '1', 'linq', '0', '0');
INSERT INTO `magic_group` VALUES ('a8a1519f8e784f1994e9a86611181dd7', 'demo5自定义结果', '1', 'custom', '0', '0');
INSERT INTO `magic_group` VALUES ('ae60cd38a8b24608bbad75d26c9ed09c', '其它', '1', 'other', 'd91d60e6333442e992bbc10a70d612b8', '0');
INSERT INTO `magic_group` VALUES ('cf0d1a9ad00d45299b27830831db9a5a', '材料', '1', 'stuff', '0', '0');
INSERT INTO `magic_group` VALUES ('d91d60e6333442e992bbc10a70d612b8', 'demo6语法测试', '1', 'test', '0', '0');
INSERT INTO `magic_group` VALUES ('d97d145633d04d05830e986c64bc2a10', '循环', '1', 'loop', 'd91d60e6333442e992bbc10a70d612b8', '0');
INSERT INTO `magic_group` VALUES ('d9a43b45d38346749441225b4e2f341a', 'demo4SQL测试', '1', 'sql', '0', '0');

SET FOREIGN_KEY_CHECKS = 1;
